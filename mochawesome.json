{
  "stats": {
    "suites": 35,
    "tests": 135,
    "passes": 114,
    "pending": 0,
    "failures": 21,
    "start": "2022-10-11T17:04:21.565Z",
    "end": "2022-10-11T17:05:38.824Z",
    "duration": 77259,
    "testsRegistered": 135,
    "passPercent": 84.44444444444444,
    "pendingPercent": 0,
    "other": 1,
    "hasOther": true,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "55125326-f0ff-477c-80aa-4292c0ce5272",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 1,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "if (process.env.ENV === 'STAGE') {\n    request.options.baseUrl = 'https://dx56nadid8.execute-api.us-east-1.amazonaws.com/stage';\n    request.options.token = 'eyJraWQiOiI2R0FXM3NoR0xuV1RNbUlESXFmSFZRanJFZUtqdCs5cUorSHNXME9yK2pZPSIsImFsZyI6IlJTMjU2In0.eyJhdF9oYXNoIjoiWTFtOG1YdUt4ZmpzWEloeGtIWE5GdyIsInN1YiI6IjdhZWVkMjc1LTNjYjctNDVjMy04NWM5LTQ1YjVhZjI5OGQwZSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RMXR1Q1lOcVQiLCJjb2duaXRvOnVzZXJuYW1lIjoiN2FlZWQyNzUtM2NiNy00NWMzLTg1YzktNDViNWFmMjk4ZDBlIiwiYXVkIjoiMzljdGxwc2MzMXNjcmxxaDU4NmZjZ2ticGQiLCJldmVudF9pZCI6Ijg2ZmU4ZjE5LWQ0NWUtNDRiMS1hOGFkLTAwMWRmZjI0YTQ0MiIsInRva2VuX3VzZSI6ImlkIiwiYXV0aF90aW1lIjoxNjY1NTA1MTYxLCJleHAiOjE2NjU1OTE1NjEsImlhdCI6MTY2NTUwNTE2MSwianRpIjoiNGYwMjVkNDgtMDc2Ni00OTU4LWFhMjktNWQyMDhiMmEyNTlmIiwiZW1haWwiOiJkaWFuYS5vdnNpdWNoZW5rb0Bpbm1vc3QucHJvIn0.KWyTIMXcX2rhRVpV-5waSUZQaYYdyOrQbXTPbp0Oy_APBE0s5kDfrV7RDMGeuH4t7C_LW2HQdqE4MTLb4OmvGoKPFa9eBP6ycLdTu1uA-sKY7w7kfPDnWhkOV0RClbpBPcEEkOm6YjZbzmpbUo-W_i0MfMK2tWZ5jCl9YrzGkXE4fguxrmuVhsm0QtvegARQDLqYTpbmAZPTrDtZyAEf-DDT7qSYNykKpQ-R1vN-ny9rIgpupOhMu6NhvuHWxYVrAnrocynqEBnTPIYibjn7a1o0hmjsCNVfC4sLyX4L4O12eAayVfJp3zdKoK9fFUNrCawa-g2BbJkZn3I0_D7xXQ';\n    reqOptions.token = 'eyJraWQiOiI2R0FXM3NoR0xuV1RNbUlESXFmSFZRanJFZUtqdCs5cUorSHNXME9yK2pZPSIsImFsZyI6IlJTMjU2In0.eyJhdF9oYXNoIjoiWTFtOG1YdUt4ZmpzWEloeGtIWE5GdyIsInN1YiI6IjdhZWVkMjc1LTNjYjctNDVjMy04NWM5LTQ1YjVhZjI5OGQwZSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9RMXR1Q1lOcVQiLCJjb2duaXRvOnVzZXJuYW1lIjoiN2FlZWQyNzUtM2NiNy00NWMzLTg1YzktNDViNWFmMjk4ZDBlIiwiYXVkIjoiMzljdGxwc2MzMXNjcmxxaDU4NmZjZ2ticGQiLCJldmVudF9pZCI6Ijg2ZmU4ZjE5LWQ0NWUtNDRiMS1hOGFkLTAwMWRmZjI0YTQ0MiIsInRva2VuX3VzZSI6ImlkIiwiYXV0aF90aW1lIjoxNjY1NTA1MTYxLCJleHAiOjE2NjU1OTE1NjEsImlhdCI6MTY2NTUwNTE2MSwianRpIjoiNGYwMjVkNDgtMDc2Ni00OTU4LWFhMjktNWQyMDhiMmEyNTlmIiwiZW1haWwiOiJkaWFuYS5vdnNpdWNoZW5rb0Bpbm1vc3QucHJvIn0.KWyTIMXcX2rhRVpV-5waSUZQaYYdyOrQbXTPbp0Oy_APBE0s5kDfrV7RDMGeuH4t7C_LW2HQdqE4MTLb4OmvGoKPFa9eBP6ycLdTu1uA-sKY7w7kfPDnWhkOV0RClbpBPcEEkOm6YjZbzmpbUo-W_i0MfMK2tWZ5jCl9YrzGkXE4fguxrmuVhsm0QtvegARQDLqYTpbmAZPTrDtZyAEf-DDT7qSYNykKpQ-R1vN-ny9rIgpupOhMu6NhvuHWxYVrAnrocynqEBnTPIYibjn7a1o0hmjsCNVfC4sLyX4L4O12eAayVfJp3zdKoK9fFUNrCawa-g2BbJkZn3I0_D7xXQ';\n} else if (process.env.ENV === 'PROD') {\n    request.options.baseUrl = 'https://chyu32umra.execute-api.us-east-1.amazonaws.com/prod';\n    request.options.token = 'eyJraWQiOiJYKzdVVkM5NlwvRUh6RmN1NGR5cTNwNklHM2pWZllIMWkrZHRJdWU0Nm0zND0iLCJhbGciOiJSUzI1NiJ9.eyJhdF9oYXNoIjoiSzJqVkQwVXl4VTRab3R2RDBMN2tQQSIsInN1YiI6Ijk3NjdkOGQzLTgyNDMtNGQwMS1hMTQ2LWQ3NTU1ODAxZjRiNCIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9tQ2xmS1l1QU0iLCJjb2duaXRvOnVzZXJuYW1lIjoiOTc2N2Q4ZDMtODI0My00ZDAxLWExNDYtZDc1NTU4MDFmNGI0IiwiYXVkIjoiN3AycWZuYzh2cWwxaTdkMDlpMXNjOHR2bWwiLCJldmVudF9pZCI6Ijc4Mjk0NDliLWVlNWUtNDRkMS1iYzRmLTc1MWQwNGE3MTBhOSIsInRva2VuX3VzZSI6ImlkIiwiYXV0aF90aW1lIjoxNjY0MzU5NjMxLCJleHAiOjE2NjQ0NDYwMzEsImlhdCI6MTY2NDM1OTYzMSwianRpIjoiNGNmZTdjY2YtMDkyYy00N2MxLTkyNmYtMjg2ZGJjMDM4MmRlIiwiZW1haWwiOiJkaWFuYS5vdnNpdWNoZW5rb0Bpbm1vc3QucHJvIn0.aLhbrfSYb-DsXKqQso0Qi8rxJ3-f9zwmBxqk2TXJiSK8SqXMSykwVClC1tL5HOlpvQ5wDQr6GRjmzPg5lc3hU9P-PDAplx_8Bt-uJpSn9GRNBM8cdR5R7jov_zj-64yJTloCSQjE-mnN2cdS919qTmDJ6aB2G1iJiCWwSiq1W-dfofhuWdx1x5rIy1TogGwxnUWY_K66f4ONSve-OZOCZB9lXMEkxtDzAhJmuEB-bU3M8ioEMxQyVBWcN0FY_dLHfpTGuhCawySJabraJY8pwlLgvxCcz1C6dkShO5gI_pK4JAl7uEt8dHUqlV28jzZhRgdNky4RaEoV4nZDrfWHlg';\n    reqOptions.token = 'eyJraWQiOiJYKzdVVkM5NlwvRUh6RmN1NGR5cTNwNklHM2pWZllIMWkrZHRJdWU0Nm0zND0iLCJhbGciOiJSUzI1NiJ9.eyJhdF9oYXNoIjoiSzJqVkQwVXl4VTRab3R2RDBMN2tQQSIsInN1YiI6Ijk3NjdkOGQzLTgyNDMtNGQwMS1hMTQ2LWQ3NTU1ODAxZjRiNCIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9tQ2xmS1l1QU0iLCJjb2duaXRvOnVzZXJuYW1lIjoiOTc2N2Q4ZDMtODI0My00ZDAxLWExNDYtZDc1NTU4MDFmNGI0IiwiYXVkIjoiN3AycWZuYzh2cWwxaTdkMDlpMXNjOHR2bWwiLCJldmVudF9pZCI6Ijc4Mjk0NDliLWVlNWUtNDRkMS1iYzRmLTc1MWQwNGE3MTBhOSIsInRva2VuX3VzZSI6ImlkIiwiYXV0aF90aW1lIjoxNjY0MzU5NjMxLCJleHAiOjE2NjQ0NDYwMzEsImlhdCI6MTY2NDM1OTYzMSwianRpIjoiNGNmZTdjY2YtMDkyYy00N2MxLTkyNmYtMjg2ZGJjMDM4MmRlIiwiZW1haWwiOiJkaWFuYS5vdnNpdWNoZW5rb0Bpbm1vc3QucHJvIn0.aLhbrfSYb-DsXKqQso0Qi8rxJ3-f9zwmBxqk2TXJiSK8SqXMSykwVClC1tL5HOlpvQ5wDQr6GRjmzPg5lc3hU9P-PDAplx_8Bt-uJpSn9GRNBM8cdR5R7jov_zj-64yJTloCSQjE-mnN2cdS919qTmDJ6aB2G1iJiCWwSiq1W-dfofhuWdx1x5rIy1TogGwxnUWY_K66f4ONSve-OZOCZB9lXMEkxtDzAhJmuEB-bU3M8ioEMxQyVBWcN0FY_dLHfpTGuhCawySJabraJY8pwlLgvxCcz1C6dkShO5gI_pK4JAl7uEt8dHUqlV28jzZhRgdNky4RaEoV4nZDrfWHlg';\n} else {\n    throw new Error('Not found ENV');\n}",
          "err": {},
          "uuid": "d13bbc05-16d1-4cf3-aa1f-c228ec9709b5",
          "parentUUID": "55125326-f0ff-477c-80aa-4292c0ce5272",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "598e9583-0582-454b-a16d-19bfb1287485",
          "title": "Should test \"Get information about cameras in location's system\"",
          "fullFile": "C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\cameras\\get.info.about.cameras.spec.js",
          "file": "\\spec\\powder_watts\\api\\cameras\\get.info.about.cameras.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should GET information about cameras successfully",
              "fullTitle": "Should test \"Get information about cameras in location's system\" should GET information about cameras successfully",
              "timedOut": false,
              "duration": 4120,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.get('/cameras?system_id=' + id);\nconsole.log(res.statusText);\nexpect(res.status).to.eql(200);",
              "err": {},
              "uuid": "2a60ea35-9df4-40ef-a6ff-0419d3b62b6f",
              "parentUUID": "598e9583-0582-454b-a16d-19bfb1287485",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should FAIL with wrong token",
              "fullTitle": "Should test \"Get information about cameras in location's system\" should FAIL with wrong token",
              "timedOut": false,
              "duration": 283,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.get('/cameras?system_id=' + id, {}, {\n    'Authorization': '',\n});\nconsole.log(res.response.statusText);\nexpect(res.response.status).to.eql(401);\nexpect(res.response.statusText).to.eql(\"Unauthorized\");",
              "err": {},
              "uuid": "de248974-aaf5-4186-a654-43caa334a4c8",
              "parentUUID": "598e9583-0582-454b-a16d-19bfb1287485",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should FAIL with wrong request type",
              "fullTitle": "Should test \"Get information about cameras in location's system\" should FAIL with wrong request type",
              "timedOut": false,
              "duration": 265,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.post('/cameras?system_id=' + id);\nconsole.log(res.response.statusText);\nexpect(res.response.status).to.eql(415);\n// expect(res.response.statusText).to.include('Forbidden')",
              "err": {},
              "uuid": "a9ffa1b0-b31e-42a1-8457-f5de204f1981",
              "parentUUID": "598e9583-0582-454b-a16d-19bfb1287485",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2a60ea35-9df4-40ef-a6ff-0419d3b62b6f",
            "de248974-aaf5-4186-a654-43caa334a4c8",
            "a9ffa1b0-b31e-42a1-8457-f5de204f1981"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4668,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "9b62ff33-d6fe-49e5-94a5-8c3d2c689860",
          "title": "Should test \"Delete camera\"",
          "fullFile": "C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\cameras\\id\\delete.camera.spec.js",
          "file": "\\spec\\powder_watts\\api\\cameras\\id\\delete.camera.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should POST new camera successfully",
              "fullTitle": "Should test \"Delete camera\" should POST new camera successfully",
              "timedOut": false,
              "duration": 1647,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.post('/cameras', data);\nconsole.log(res.status);\nexpect(res.status).to.eql(200);\nid = res.data.data.camera_id;\nconsole.log(\"camera with id \" + id + \" is created.\")",
              "err": {},
              "uuid": "20b782bd-01d9-4ce8-9af3-bf99b7e14202",
              "parentUUID": "9b62ff33-d6fe-49e5-94a5-8c3d2c689860",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should DELETE camera successfully",
              "fullTitle": "Should test \"Delete camera\" should DELETE camera successfully",
              "timedOut": false,
              "duration": 1011,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.delete('/cameras/' + id);\nconsole.log(res.statusText);\nexpect(res.status).to.eql(200);\nconsole.log(\"Camera with id \"+ id + \" is deleted\")",
              "err": {},
              "uuid": "0f867051-c66f-495e-b5ab-9e8589f28805",
              "parentUUID": "9b62ff33-d6fe-49e5-94a5-8c3d2c689860",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should FAIL with Unauthorized",
              "fullTitle": "Should test \"Delete camera\" should FAIL with Unauthorized",
              "timedOut": false,
              "duration": 196,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.delete('/cameras/' + id, {},\n    {\n        'Authorization': ''\n    },);\nconsole.log(res.response.data.message);\nexpect(res.response.status).to.eql(401);\nexpect(res.response.statusText).to.include(\"Unauthorized\");",
              "err": {},
              "uuid": "cd2de07d-4d9d-4fc5-9f3a-65c8b2fddbbb",
              "parentUUID": "9b62ff33-d6fe-49e5-94a5-8c3d2c689860",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should FAIL with wrong request type",
              "fullTitle": "Should test \"Delete camera\" should FAIL with wrong request type",
              "timedOut": false,
              "duration": 479,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.put('/cameras/' + id)\nconsole.log(res.response.statusText);\nexpect(res.response.status).to.eql(415);\nexpect(res.response.statusText).to.include(\"Unsupported\");",
              "err": {},
              "uuid": "10bf907f-46b5-4e95-84e2-30fa1fc89fd6",
              "parentUUID": "9b62ff33-d6fe-49e5-94a5-8c3d2c689860",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "20b782bd-01d9-4ce8-9af3-bf99b7e14202",
            "0f867051-c66f-495e-b5ab-9e8589f28805",
            "cd2de07d-4d9d-4fc5-9f3a-65c8b2fddbbb",
            "10bf907f-46b5-4e95-84e2-30fa1fc89fd6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3333,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "3db20959-0b60-427b-afa8-5538bbcb1875",
          "title": "Should test \"Get camera by id\"",
          "fullFile": "C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\cameras\\id\\get.camera.spec.js",
          "file": "\\spec\\powder_watts\\api\\cameras\\id\\get.camera.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should GET camera successfully",
              "fullTitle": "Should test \"Get camera by id\" should GET camera successfully",
              "timedOut": false,
              "duration": 393,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.get('/cameras/' + id);\nconsole.log(res.statusText);\nexpect(res.status).to.eql(200);",
              "err": {},
              "uuid": "1f8f7e70-7861-4666-96ba-80e815989422",
              "parentUUID": "3db20959-0b60-427b-afa8-5538bbcb1875",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should FAIL with wrong token",
              "fullTitle": "Should test \"Get camera by id\" should FAIL with wrong token",
              "timedOut": false,
              "duration": 196,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.get('/cameras/' + id, {}, {\n    'Authorization': '',\n});\nconsole.log(res.response.statusText);\nexpect(res.response.status).to.eql(401);\nexpect(res.response.statusText).to.eql(\"Unauthorized\");",
              "err": {},
              "uuid": "09d4c52f-e4da-41db-8b9d-a1a83a360dde",
              "parentUUID": "3db20959-0b60-427b-afa8-5538bbcb1875",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should FAIL with wrong id",
              "fullTitle": "Should test \"Get camera by id\" should FAIL with wrong id",
              "timedOut": false,
              "duration": 524,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.get('/cameras/' + wrongId);\nconsole.log(res.response.data.message);\nexpect(res.response.status).to.eql(403);",
              "err": {},
              "uuid": "8e820279-574c-44dd-a566-3113b199fe2d",
              "parentUUID": "3db20959-0b60-427b-afa8-5538bbcb1875",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should FAIL with wrong request type",
              "fullTitle": "Should test \"Get camera by id\" should FAIL with wrong request type",
              "timedOut": false,
              "duration": 425,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.post('/cameras/' + id);\nconsole.log(res.response.statusText);\nexpect(res.response.status).to.eql(403);\nexpect(res.response.statusText).to.include('Forbidden')",
              "err": {},
              "uuid": "059626da-d668-4493-8707-072cbd56773c",
              "parentUUID": "3db20959-0b60-427b-afa8-5538bbcb1875",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1f8f7e70-7861-4666-96ba-80e815989422",
            "09d4c52f-e4da-41db-8b9d-a1a83a360dde",
            "8e820279-574c-44dd-a566-3113b199fe2d",
            "059626da-d668-4493-8707-072cbd56773c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1538,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "a347c369-d813-417d-adfb-55dbaa30119f",
          "title": "Should test \"Get history (images) of some camera in some location system",
          "fullFile": "C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\cameras\\id\\get.images.from.camera.spec.js",
          "file": "\\spec\\powder_watts\\api\\cameras\\id\\get.images.from.camera.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should GET images of some camera successfully",
              "fullTitle": "Should test \"Get history (images) of some camera in some location system should GET images of some camera successfully",
              "timedOut": false,
              "duration": 393,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.get('/cameras/' + id + '/photos');\nexpect(res.status).to.eql(200);",
              "err": {},
              "uuid": "9e4a53d3-9570-4d18-ad75-fb2a47abf7cb",
              "parentUUID": "a347c369-d813-417d-adfb-55dbaa30119f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should FAIL with wrong token",
              "fullTitle": "Should test \"Get history (images) of some camera in some location system should FAIL with wrong token",
              "timedOut": false,
              "duration": 414,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.get('/cameras/' + id + '/photos', {}, {\n    'Authorization': '',\n});\nconsole.log(res.response.statusText);\nexpect(res.response.status).to.eql(401);\nexpect(res.response.statusText).to.eql(\"Unauthorized\");",
              "err": {},
              "uuid": "c6bc84ad-3f58-4e55-976c-0ceafe884257",
              "parentUUID": "a347c369-d813-417d-adfb-55dbaa30119f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should FAIL with wrong request type",
              "fullTitle": "Should test \"Get history (images) of some camera in some location system should FAIL with wrong request type",
              "timedOut": false,
              "duration": 221,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.post('/cameras/' + id + '/photos');\nconsole.log(res.response.statusText);\nexpect(res.response.status).to.eql(403);\nexpect(res.response.statusText).to.include('Forbidden')",
              "err": {},
              "uuid": "b4e439bd-65a1-4610-af22-544a09cd084d",
              "parentUUID": "a347c369-d813-417d-adfb-55dbaa30119f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9e4a53d3-9570-4d18-ad75-fb2a47abf7cb",
            "c6bc84ad-3f58-4e55-976c-0ceafe884257",
            "b4e439bd-65a1-4610-af22-544a09cd084d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1028,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e071dfc5-d341-453c-a6e1-d8cb01730a16",
          "title": "Should test \"Update camera by id",
          "fullFile": "C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\cameras\\id\\put.update.camera.spec.js",
          "file": "\\spec\\powder_watts\\api\\cameras\\id\\put.update.camera.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should PUT camera mode successfully with TRUE",
              "fullTitle": "Should test \"Update camera by id should PUT camera mode successfully with TRUE",
              "timedOut": false,
              "duration": 512,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.put('/cameras/' + id, dataTrue);\nconsole.log(res.status);\nexpect(res.status).to.eql(200);\nexpect(res.data.data.autoupdate_firmware).to.eql(true);",
              "err": {},
              "uuid": "d8e409e1-448a-48ad-b329-228c19d5bb94",
              "parentUUID": "e071dfc5-d341-453c-a6e1-d8cb01730a16",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should PUT camera mode successfully with FALSE",
              "fullTitle": "Should test \"Update camera by id should PUT camera mode successfully with FALSE",
              "timedOut": false,
              "duration": 537,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const res = await request.put('/cameras/' + id, dataFalse);\nconsole.log(res.status);\nexpect(res.status).to.eql(200);\nexpect(res.data.data.autoupdate_firmware).to.eql(false);",
              "err": {
                "message": "AssertionError: expected true to deeply equal false",
                "estack": "AssertionError: expected true to deeply equal false\n    at Context.<anonymous> (C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\cameras\\id\\put.update.camera.spec.js:33:54)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": "- true\n+ false\n"
              },
              "uuid": "b1b66d67-d646-486e-8c0f-20394ad19172",
              "parentUUID": "e071dfc5-d341-453c-a6e1-d8cb01730a16",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "account does not exist",
              "fullTitle": "Should test \"Update camera by id account does not exist",
              "timedOut": false,
              "duration": 416,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.custom.put('/cameras/' + id, dataTrue,{\n    headers: {\n        'Authorization': '',\n        'Accept': 'application/json'\n    },\n});\nconsole.log(res.response.statusText);\nexpect(res.response.status).not.to.eql(200);\nexpect (res.response.statusText).to.include(\"Unauthorized\");",
              "err": {},
              "uuid": "022192db-272f-45ce-a4d1-0408a9bef330",
              "parentUUID": "e071dfc5-d341-453c-a6e1-d8cb01730a16",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail with Forbidden",
              "fullTitle": "Should test \"Update camera by id should fail with Forbidden",
              "timedOut": false,
              "duration": 195,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.post('/cameras/' + id, dataTrue);\nconsole.log(res.response.statusText);\nexpect(res.response.status).to.eql(403);\nexpect(res.response.statusText).to.include(\"Forbidden\");",
              "err": {},
              "uuid": "122896a1-7c38-4d87-8aa8-c54917abe6df",
              "parentUUID": "e071dfc5-d341-453c-a6e1-d8cb01730a16",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail with empty data",
              "fullTitle": "Should test \"Update camera by id should fail with empty data",
              "timedOut": false,
              "duration": 323,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.put('/cameras/' + id, emptyData);\nconsole.log(res.response.data.message);\nexpect(res.response.status).to.eql(400);",
              "err": {},
              "uuid": "54a80f8b-436d-4aa2-a754-ed0e9e344b46",
              "parentUUID": "e071dfc5-d341-453c-a6e1-d8cb01730a16",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail with wrong id",
              "fullTitle": "Should test \"Update camera by id should fail with wrong id",
              "timedOut": false,
              "duration": 372,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.put('/cameras/' + wrongId, dataTrue);\nconsole.log(res.response.data.message);\nexpect(res.response.status).to.eql(403);",
              "err": {},
              "uuid": "8f9f0bba-dad6-4163-bbae-5dd82c96bb9a",
              "parentUUID": "e071dfc5-d341-453c-a6e1-d8cb01730a16",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail with no property",
              "fullTitle": "Should test \"Update camera by id should fail with no property",
              "timedOut": false,
              "duration": 422,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.put('/cameras/', dataTrue);\nconsole.log(res.response.data.message);\nexpect(res.response.status).to.eql(403);",
              "err": {},
              "uuid": "f04c863d-e818-4370-a481-e1e60ef6902c",
              "parentUUID": "e071dfc5-d341-453c-a6e1-d8cb01730a16",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d8e409e1-448a-48ad-b329-228c19d5bb94",
            "022192db-272f-45ce-a4d1-0408a9bef330",
            "122896a1-7c38-4d87-8aa8-c54917abe6df",
            "54a80f8b-436d-4aa2-a754-ed0e9e344b46",
            "8f9f0bba-dad6-4163-bbae-5dd82c96bb9a",
            "f04c863d-e818-4370-a481-e1e60ef6902c"
          ],
          "failures": [
            "b1b66d67-d646-486e-8c0f-20394ad19172"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2777,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "918d4ea6-a790-45db-babc-2c68755b768a",
          "title": "Should test \"create new camera",
          "fullFile": "C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\cameras\\post.create.camera.spec.js",
          "file": "\\spec\\powder_watts\\api\\cameras\\post.create.camera.spec.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after all\" hook: should delete camera in \"Should test \"create new camera\"",
              "fullTitle": "Should test \"create new camera \"after all\" hook: should delete camera in \"Should test \"create new camera\"",
              "timedOut": false,
              "duration": 743,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.delete('/cameras/' + id);\nconsole.log(res.statusText);\nexpect(res.status).to.eql(200);\nconsole.log(\"Camera with id \"+ id + \" is deleted\")",
              "err": {},
              "uuid": "35c2cb2a-af3a-498b-8198-8e1b9e474e9c",
              "parentUUID": "918d4ea6-a790-45db-babc-2c68755b768a",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should POST new camera successfully",
              "fullTitle": "Should test \"create new camera should POST new camera successfully",
              "timedOut": false,
              "duration": 1041,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.post('/cameras', data);\nconsole.log(res.status);\nexpect(res.status).to.eql(200);\nid = res.data.data.camera_id;\nconsole.log(id)",
              "err": {},
              "uuid": "c3da9083-501b-43e4-bfc4-f59ba675b798",
              "parentUUID": "918d4ea6-a790-45db-babc-2c68755b768a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "account does not exist",
              "fullTitle": "Should test \"create new camera account does not exist",
              "timedOut": false,
              "duration": 191,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.custom.post('/cameras', data,{\n    headers: {\n        'Authorization': '',\n        'Accept': 'application/json'\n    },\n});\nconsole.log(res.response.statusText);\nexpect(res.response.status).not.to.eql(200);\nexpect (res.response.statusText).to.include(\"Unauthorized\");",
              "err": {},
              "uuid": "d89a379a-99d5-486a-b02e-af9edf7ee5ae",
              "parentUUID": "918d4ea6-a790-45db-babc-2c68755b768a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c3da9083-501b-43e4-bfc4-f59ba675b798",
            "d89a379a-99d5-486a-b02e-af9edf7ee5ae"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1232,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e43a57df-210a-4471-a29e-b353e337b54f",
          "title": "Should test \"Delete hub by id\"",
          "fullFile": "C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\hubs\\id\\delete.hub.spec.js",
          "file": "\\spec\\powder_watts\\api\\hubs\\id\\delete.hub.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should create new hub successfully",
              "fullTitle": "Should test \"Delete hub by id\" should create new hub successfully",
              "timedOut": false,
              "duration": 865,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.post('/hubs/', data);\nconsole.log(res.status);\nexpect(res.status).to.eql(200);\nid = res.data.data.hub_id;\nconsole.log(id)",
              "err": {},
              "uuid": "f14328b5-510f-4f68-9fdb-c86bd8859bdf",
              "parentUUID": "e43a57df-210a-4471-a29e-b353e337b54f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should DELETE hub successfully",
              "fullTitle": "Should test \"Delete hub by id\" should DELETE hub successfully",
              "timedOut": false,
              "duration": 902,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.delete('/hubs/' + id);\nconsole.log(res.statusText);\nexpect(res.status).to.eql(200);\nconsole.log(\"hub with id \"+ id + \" is deleted\")",
              "err": {},
              "uuid": "30165a71-6652-48bf-bec8-afe4e68600ff",
              "parentUUID": "e43a57df-210a-4471-a29e-b353e337b54f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should FAIL with Unauthorized",
              "fullTitle": "Should test \"Delete hub by id\" should FAIL with Unauthorized",
              "timedOut": false,
              "duration": 196,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.delete('/hubs/' + id, {},\n    {\n        'Authorization': ''\n    },);\nconsole.log(res.response.data.message);\nexpect(res.response.status).to.eql(401);\nexpect(res.response.statusText).to.include(\"Unauthorized\");",
              "err": {},
              "uuid": "5969a1c5-3613-48f5-aafe-3e2a8484ea91",
              "parentUUID": "e43a57df-210a-4471-a29e-b353e337b54f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should FAIL with wrong request type",
              "fullTitle": "Should test \"Delete hub by id\" should FAIL with wrong request type",
              "timedOut": false,
              "duration": 243,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.put('/hubs/' + id)\nconsole.log(res.response.statusText);\nexpect(res.response.status).to.eql(415);\nexpect(res.response.statusText).to.include(\"Unsupported\");",
              "err": {},
              "uuid": "a0a9c3c8-fdc8-408a-b9f3-0fdef9c98c5d",
              "parentUUID": "e43a57df-210a-4471-a29e-b353e337b54f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f14328b5-510f-4f68-9fdb-c86bd8859bdf",
            "30165a71-6652-48bf-bec8-afe4e68600ff",
            "5969a1c5-3613-48f5-aafe-3e2a8484ea91",
            "a0a9c3c8-fdc8-408a-b9f3-0fdef9c98c5d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2206,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7aaa44d4-15d3-4fb4-b03c-cf4d85eab68c",
          "title": "Should test \"Update hub by id",
          "fullFile": "C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\hubs\\id\\put.update.hub.spec.js",
          "file": "\\spec\\powder_watts\\api\\hubs\\id\\put.update.hub.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should update hub successfully",
              "fullTitle": "Should test \"Update hub by id should update hub successfully",
              "timedOut": false,
              "duration": 613,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const res = await request.put('/hubs/' + id, data);\nconsole.log(res.status);\nexpect(res.status).to.eql(200);",
              "err": {
                "message": "AssertionError: expected undefined to deeply equal 200",
                "estack": "AssertionError: expected undefined to deeply equal 200\n    at Context.<anonymous> (C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\hubs\\id\\put.update.hub.spec.js:24:31)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": null
              },
              "uuid": "b2afb5a1-376f-473f-ad82-9c6981b0a574",
              "parentUUID": "7aaa44d4-15d3-4fb4-b03c-cf4d85eab68c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "account does not exist",
              "fullTitle": "Should test \"Update hub by id account does not exist",
              "timedOut": false,
              "duration": 192,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.custom.put('/hubs/' + id, data,{\n    headers: {\n        'Authorization': '',\n        'Accept': 'application/json'\n    },\n});\nconsole.log(res.response.statusText);\nexpect(res.response.status).not.to.eql(200);\nexpect (res.response.statusText).to.include(\"Unauthorized\");",
              "err": {},
              "uuid": "337e1152-16ee-4327-93f6-5987cf35a26e",
              "parentUUID": "7aaa44d4-15d3-4fb4-b03c-cf4d85eab68c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail with Forbidden",
              "fullTitle": "Should test \"Update hub by id should fail with Forbidden",
              "timedOut": false,
              "duration": 418,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.post('/hubs/' + id, data);\nconsole.log(res.response.statusText);\nexpect(res.response.status).to.eql(403);\nexpect(res.response.statusText).to.include(\"Forbidden\");",
              "err": {},
              "uuid": "dbfb1ec2-b636-435a-b110-bc6059f6e976",
              "parentUUID": "7aaa44d4-15d3-4fb4-b03c-cf4d85eab68c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail with empty data",
              "fullTitle": "Should test \"Update hub by id should fail with empty data",
              "timedOut": false,
              "duration": 676,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.put('/hubs/' + id, emptyData);\nconsole.log(res.response.data.error);\nexpect(res.response.status).to.eql(400);",
              "err": {},
              "uuid": "c3337211-bf5c-44eb-bf3a-6f6f506c1b8b",
              "parentUUID": "7aaa44d4-15d3-4fb4-b03c-cf4d85eab68c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail with wrong id",
              "fullTitle": "Should test \"Update hub by id should fail with wrong id",
              "timedOut": false,
              "duration": 339,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.put('/hubs/' + wrongId, data);\nconsole.log(res.response.data.error);\nexpect(res.response.status).to.eql(403);",
              "err": {},
              "uuid": "ccb912d1-44e4-44f2-ad7b-6a7d1cdc1f78",
              "parentUUID": "7aaa44d4-15d3-4fb4-b03c-cf4d85eab68c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail with no property",
              "fullTitle": "Should test \"Update hub by id should fail with no property",
              "timedOut": false,
              "duration": 195,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.put('/hubs/', data);\nconsole.log(res.response.statusText);\nexpect(res.response.status).to.eql(403);\nexpect(res.response.statusText).to.include('Forbidden');",
              "err": {},
              "uuid": "0ddf939e-c50f-4f6c-af87-ac6f8ff765dc",
              "parentUUID": "7aaa44d4-15d3-4fb4-b03c-cf4d85eab68c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "337e1152-16ee-4327-93f6-5987cf35a26e",
            "dbfb1ec2-b636-435a-b110-bc6059f6e976",
            "c3337211-bf5c-44eb-bf3a-6f6f506c1b8b",
            "ccb912d1-44e4-44f2-ad7b-6a7d1cdc1f78",
            "0ddf939e-c50f-4f6c-af87-ac6f8ff765dc"
          ],
          "failures": [
            "b2afb5a1-376f-473f-ad82-9c6981b0a574"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2433,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c4465be4-f523-4fdf-ae68-2214136ad139",
          "title": "Should test \"create new hub",
          "fullFile": "C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\hubs\\post.create.hub.spec.js",
          "file": "\\spec\\powder_watts\\api\\hubs\\post.create.hub.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should POST new hub successfully",
              "fullTitle": "Should test \"create new hub should POST new hub successfully",
              "timedOut": false,
              "duration": 614,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.post('/hubs', prodData);\nconsole.log(res.status);\nexpect(res.status).to.eql(200);\nhub_id = res.data.data.hub_id;\nconsole.log(hub_id)",
              "err": {},
              "uuid": "268ba36f-d5c2-498d-bee8-a98a44437862",
              "parentUUID": "c4465be4-f523-4fdf-ae68-2214136ad139",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "account does not exist",
              "fullTitle": "Should test \"create new hub account does not exist",
              "timedOut": false,
              "duration": 193,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.custom.post('/hubs', prodData,{\n    headers: {\n        'Authorization': '',\n        'Accept': 'application/json'\n    },\n});\nconsole.log(res.response.statusText);\nexpect(res.response.status).not.to.eql(200);\nexpect (res.response.statusText).to.include(\"Unauthorized\");",
              "err": {},
              "uuid": "9b9bfbe6-cff7-4d27-acaf-d29ab1b022f4",
              "parentUUID": "c4465be4-f523-4fdf-ae68-2214136ad139",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail with empty data",
              "fullTitle": "Should test \"create new hub should fail with empty data",
              "timedOut": false,
              "duration": 518,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.post('/hubs', emptyProdData);\nconsole.log(res.response.data.error);\nexpect(res.response.status).to.eql(422);\nexpect(res.response.data.message).to.include(\"is a required property\")",
              "err": {},
              "uuid": "7ea7b839-b391-4c7f-8a7c-702069e77d60",
              "parentUUID": "c4465be4-f523-4fdf-ae68-2214136ad139",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail with empty data",
              "fullTitle": "Should test \"create new hub should fail with empty data",
              "timedOut": false,
              "duration": 299,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.post('/hubs', emptyProdData);\nconsole.log(res.response.data.error);\nexpect(res.response.status).to.eql(422);\nexpect(res.response.data.message).to.include(\"is a required property\")",
              "err": {},
              "uuid": "d04d11cd-3444-4307-945c-380414a26f19",
              "parentUUID": "c4465be4-f523-4fdf-ae68-2214136ad139",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete hub",
              "fullTitle": "Should test \"create new hub should delete hub",
              "timedOut": false,
              "duration": 698,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.delete('/hubs/' + hub_id);\nconsole.log(res.statusText);\nexpect(res.status).to.eql(200);\nconsole.log(\"hub with id \"+ hub_id + \" is deleted\")",
              "err": {},
              "uuid": "d47a0a08-95e1-4664-b053-4d860f54a3bc",
              "parentUUID": "c4465be4-f523-4fdf-ae68-2214136ad139",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "268ba36f-d5c2-498d-bee8-a98a44437862",
            "9b9bfbe6-cff7-4d27-acaf-d29ab1b022f4",
            "7ea7b839-b391-4c7f-8a7c-702069e77d60",
            "d04d11cd-3444-4307-945c-380414a26f19",
            "d47a0a08-95e1-4664-b053-4d860f54a3bc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2322,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "bd94b58a-eb7f-436e-8e85-029c42a9bfcf",
          "title": "Should test \"Delete location\"",
          "fullFile": "C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\locations\\id\\delete.location.spec.js",
          "file": "\\spec\\powder_watts\\api\\locations\\id\\delete.location.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: should POST new location successfully in \"Should test \"Delete location\"\"",
              "fullTitle": "Should test \"Delete location\" \"before all\" hook: should POST new location successfully in \"Should test \"Delete location\"\"",
              "timedOut": false,
              "duration": 733,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.post('/locations', data);\nconsole.log(res.status);\nexpect(res.status).to.eql(200);\nid = res.data.data.location_id;\nconsole.log(id)",
              "err": {},
              "uuid": "b34d5eea-5e9c-4dd6-93da-102f41678f33",
              "parentUUID": "bd94b58a-eb7f-436e-8e85-029c42a9bfcf",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "should DELETE location successfully",
              "fullTitle": "Should test \"Delete location\" should DELETE location successfully",
              "timedOut": false,
              "duration": 463,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.delete('/locations/' + id);\nconsole.log(res.statusText);\nexpect(res.status).to.eql(200);\nconsole.log(\"Location with id \"+ id + \" is deleted\")",
              "err": {},
              "uuid": "58bbedac-c92b-436a-93e4-fc958ce60325",
              "parentUUID": "bd94b58a-eb7f-436e-8e85-029c42a9bfcf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should FAIL with Unauthorized",
              "fullTitle": "Should test \"Delete location\" should FAIL with Unauthorized",
              "timedOut": false,
              "duration": 201,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.delete('/locations/' + id, {},\n    {\n        'Authorization': ''\n    },);\nconsole.log(res.response.data.message);\nexpect(res.response.status).to.eql(401);\nexpect(res.response.statusText).to.include(\"Unauthorized\");",
              "err": {},
              "uuid": "39005370-7f4b-4508-894f-2a7936952e49",
              "parentUUID": "bd94b58a-eb7f-436e-8e85-029c42a9bfcf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should FAIL with wrong request type",
              "fullTitle": "Should test \"Delete location\" should FAIL with wrong request type",
              "timedOut": false,
              "duration": 262,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.put('/locations/' + id)\nconsole.log(res.response.statusText);\nexpect(res.response.status).to.eql(415);\nexpect(res.response.statusText).to.include(\"Unsupported\");",
              "err": {},
              "uuid": "1b90561b-0f93-4a49-b492-006f6a196ad3",
              "parentUUID": "bd94b58a-eb7f-436e-8e85-029c42a9bfcf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "58bbedac-c92b-436a-93e4-fc958ce60325",
            "39005370-7f4b-4508-894f-2a7936952e49",
            "1b90561b-0f93-4a49-b492-006f6a196ad3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 926,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "099b59ed-b03c-4fa4-b134-d4774311d954",
          "title": "Should test \"create new location",
          "fullFile": "C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\locations\\post.new.location.spec.js",
          "file": "\\spec\\powder_watts\\api\\locations\\post.new.location.spec.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after all\" hook: should delete location in \"Should test \"create new location\"",
              "fullTitle": "Should test \"create new location \"after all\" hook: should delete location in \"Should test \"create new location\"",
              "timedOut": false,
              "duration": 768,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.delete('/locations/' + id);\nconsole.log(res.statusText);\nexpect(res.status).to.eql(200);\nconsole.log(\"Location with id \"+ id + \" is deleted\")",
              "err": {},
              "uuid": "7804115d-d27f-4cdc-8fe8-40f98875f5db",
              "parentUUID": "099b59ed-b03c-4fa4-b134-d4774311d954",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should POST new location successfully",
              "fullTitle": "Should test \"create new location should POST new location successfully",
              "timedOut": false,
              "duration": 726,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.post('/locations', data);\nconsole.log(res.status);\nexpect(res.status).to.eql(200);\nid = res.data.data.location_id;\nconsole.log(id)",
              "err": {},
              "uuid": "2e2a142b-2469-434c-8d03-68774542cf26",
              "parentUUID": "099b59ed-b03c-4fa4-b134-d4774311d954",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "account does not exist",
              "fullTitle": "Should test \"create new location account does not exist",
              "timedOut": false,
              "duration": 218,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.custom.post('/locations', data,{\n    headers: {\n        'Authorization': '',\n        'Accept': 'application/json'\n    },\n});\nconsole.log(res.response.statusText);\nexpect(res.response.status).not.to.eql(200);\nexpect (res.response.statusText).to.include(\"Unauthorized\");",
              "err": {},
              "uuid": "1e5c3cdf-8165-4a59-8d2b-23850e596b09",
              "parentUUID": "099b59ed-b03c-4fa4-b134-d4774311d954",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2e2a142b-2469-434c-8d03-68774542cf26",
            "1e5c3cdf-8165-4a59-8d2b-23850e596b09"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 944,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "6f0f04c6-91da-4382-92d6-64a2955b9f5a",
          "title": "Should test \"Delete device from user\"",
          "fullFile": "C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\profile\\devices\\delete.device_from_user.spec.js",
          "file": "\\spec\\powder_watts\\api\\profile\\devices\\delete.device_from_user.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should DELETE device successfully",
              "fullTitle": "Should test \"Delete device from user\" should DELETE device successfully",
              "timedOut": false,
              "duration": 380,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.delete('/profile/devices/:' + id);\nconsole.log(res.statusText);\nexpect(res.status).to.eql(204);",
              "err": {},
              "uuid": "ee1672b8-c3c6-430f-86b9-933f47504554",
              "parentUUID": "6f0f04c6-91da-4382-92d6-64a2955b9f5a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should FAIL with Unauthorized",
              "fullTitle": "Should test \"Delete device from user\" should FAIL with Unauthorized",
              "timedOut": false,
              "duration": 198,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.delete('/profile/devices/:' + id, {},\n    {\n        'Authorization': '1111'\n    },);\nconsole.log(res.response.data.message);\nexpect(res.response.status).to.eql(401);\nexpect(res.response.statusText).to.include(\"Unauthorized\");",
              "err": {},
              "uuid": "b2f6e429-7fd1-477c-ac2f-064560306602",
              "parentUUID": "6f0f04c6-91da-4382-92d6-64a2955b9f5a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should FAIL with wrong request type",
              "fullTitle": "Should test \"Delete device from user\" should FAIL with wrong request type",
              "timedOut": false,
              "duration": 194,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.put('/profile/devices/:' + id)\nconsole.log(res.response.statusText);\nexpect(res.response.status).to.eql(403);\nexpect(res.response.statusText).to.include(\"Forbidden\");",
              "err": {},
              "uuid": "fe0d4355-c94e-4ad2-9135-6fab781607ac",
              "parentUUID": "6f0f04c6-91da-4382-92d6-64a2955b9f5a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ee1672b8-c3c6-430f-86b9-933f47504554",
            "b2f6e429-7fd1-477c-ac2f-064560306602",
            "fe0d4355-c94e-4ad2-9135-6fab781607ac"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 772,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "fc5dd977-57e5-4c7f-a45d-efb7b640ca0d",
          "title": "Should test \"Add device of user\"",
          "fullFile": "C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\profile\\devices\\post.add_device_of_user.spec.js",
          "file": "\\spec\\powder_watts\\api\\profile\\devices\\post.add_device_of_user.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should POST device successfully",
              "fullTitle": "Should test \"Add device of user\" should POST device successfully",
              "timedOut": false,
              "duration": 639,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.post('/profile/devices', dataIos);\nconsole.log(res.status);\nexpect(res.status).to.eql(200);",
              "err": {},
              "uuid": "500b1372-72f0-41a1-b810-46a8a9fa2592",
              "parentUUID": "fc5dd977-57e5-4c7f-a45d-efb7b640ca0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should FAIL with Invalid OS. Possible values: android, ios / Invalid request. Missing parameters",
              "fullTitle": "Should test \"Add device of user\" should FAIL with Invalid OS. Possible values: android, ios / Invalid request. Missing parameters",
              "timedOut": false,
              "duration": 618,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const res = await request.post('/profile/devices', data1);\nconsole.log(res.message);\nexpect(res.response.status).to.eql(422);\nexpect(res.response.data.message).to.include(\"is not one of ['ios', 'android']\");\n    //TODO AFTER FIXING BC GOT STATUS 200",
              "err": {
                "message": "TypeError: Cannot read properties of undefined (reading 'status')",
                "estack": "TypeError: Cannot read properties of undefined (reading 'status')\n    at Context.<anonymous> (C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\profile\\devices\\post.add_device_of_user.spec.js:28:29)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": null
              },
              "uuid": "e33c5ec0-7682-49e0-9765-951380b86a8a",
              "parentUUID": "fc5dd977-57e5-4c7f-a45d-efb7b640ca0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should FAIL with Unauthorized",
              "fullTitle": "Should test \"Add device of user\" should FAIL with Unauthorized",
              "timedOut": false,
              "duration": 409,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.post('/profile/devices', dataIos,\n    {\n        'Authorization': '1111'\n    },);\nconsole.log(res.response.data.message);\nexpect(res.response.status).to.eql(401);\nexpect(res.response.statusText).to.include(\"Unauthorized\");",
              "err": {},
              "uuid": "eccf5c8a-9868-4bb2-9ece-1937bc3109fa",
              "parentUUID": "fc5dd977-57e5-4c7f-a45d-efb7b640ca0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should FAIL with wrong request type",
              "fullTitle": "Should test \"Add device of user\" should FAIL with wrong request type",
              "timedOut": false,
              "duration": 413,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.put('/profile/devices', dataIos);\nconsole.log(res.response.statusText);\nexpect(res.response.status).to.eql(403);\nexpect(res.response.statusText).to.include(\"Forbidden\");",
              "err": {},
              "uuid": "6c32c3b3-30b9-4750-a8be-3e04ec843908",
              "parentUUID": "fc5dd977-57e5-4c7f-a45d-efb7b640ca0d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "500b1372-72f0-41a1-b810-46a8a9fa2592",
            "eccf5c8a-9868-4bb2-9ece-1937bc3109fa",
            "6c32c3b3-30b9-4750-a8be-3e04ec843908"
          ],
          "failures": [
            "e33c5ec0-7682-49e0-9765-951380b86a8a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2079,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "93f62066-519c-482a-948f-d4fc8b9a2134",
          "title": "Should test \"Get user profile\"",
          "fullFile": "C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\profile\\get.profile.spec.js",
          "file": "\\spec\\powder_watts\\api\\profile\\get.profile.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should GET user profile successfully",
              "fullTitle": "Should test \"Get user profile\" should GET user profile successfully",
              "timedOut": false,
              "duration": 2657,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.get('/profile');\nexpect(res.status).to.eql(200);",
              "err": {},
              "uuid": "f2957f91-7529-4fa9-8008-67a62a0e44b8",
              "parentUUID": "93f62066-519c-482a-948f-d4fc8b9a2134",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should FAIL with wrong token",
              "fullTitle": "Should test \"Get user profile\" should FAIL with wrong token",
              "timedOut": false,
              "duration": 191,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.get('/profile', {}, {\n    'Authorization': '',\n});\nconsole.log(res.statusText);\nexpect(res.status).to.eql(401);\nexpect(res.statusText).to.eql(\"Unauthorized\");",
              "err": {},
              "uuid": "cb3da9db-236e-41cf-b95c-ae8602695001",
              "parentUUID": "93f62066-519c-482a-948f-d4fc8b9a2134",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should FAIL with wrong request type",
              "fullTitle": "Should test \"Get user profile\" should FAIL with wrong request type",
              "timedOut": false,
              "duration": 198,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.post('/profile');\nconsole.log(res.statusText);\nexpect(res.status).to.eql(403);\nexpect(res.statusText).to.include('Forbidden')",
              "err": {},
              "uuid": "7d510451-db7d-471c-acbd-8969e22ab3b9",
              "parentUUID": "93f62066-519c-482a-948f-d4fc8b9a2134",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f2957f91-7529-4fa9-8008-67a62a0e44b8",
            "cb3da9db-236e-41cf-b95c-ae8602695001",
            "7d510451-db7d-471c-acbd-8969e22ab3b9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3046,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "a3f5f11a-846b-4643-b762-18eee6479de3",
          "title": "Should test \"Delete location from user\"",
          "fullFile": "C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\profile\\locations\\id\\delete.location.spec.js",
          "file": "\\spec\\powder_watts\\api\\profile\\locations\\id\\delete.location.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should add location to user",
              "fullTitle": "Should test \"Delete location from user\" should add location to user",
              "timedOut": false,
              "duration": 566,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const res = await request.post('/profile/locations', data);\nconsole.log(res.status);\nexpect(res.status).to.eql(200);",
              "err": {
                "message": "AssertionError: expected undefined to deeply equal 200",
                "estack": "AssertionError: expected undefined to deeply equal 200\n    at Context.<anonymous> (C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\profile\\locations\\id\\delete.location.spec.js:22:31)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": null
              },
              "uuid": "a828385b-1725-42e7-9f01-1f567ef284e4",
              "parentUUID": "a3f5f11a-846b-4643-b762-18eee6479de3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should DELETE location from user successfully",
              "fullTitle": "Should test \"Delete location from user\" should DELETE location from user successfully",
              "timedOut": false,
              "duration": 317,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const res = await request.delete('/profile/locations/' + id);\nconsole.log(res.statusText);\nexpect(res.status).to.eql(200);",
              "err": {
                "message": "AssertionError: expected undefined to deeply equal 200",
                "estack": "AssertionError: expected undefined to deeply equal 200\n    at Context.<anonymous> (C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\profile\\locations\\id\\delete.location.spec.js:29:31)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": null
              },
              "uuid": "0bd403cb-8d29-4a4a-915d-1a9e330dd53b",
              "parentUUID": "a3f5f11a-846b-4643-b762-18eee6479de3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should FAIL with Unauthorized",
              "fullTitle": "Should test \"Delete location from user\" should FAIL with Unauthorized",
              "timedOut": false,
              "duration": 425,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.delete('/profile/locations/' + id, null,\n    {\n        'Authorization': '1111'\n    },);\nconsole.log(res.response.data.message);\nexpect(res.response.status).to.eql(401);\nexpect(res.response.statusText).to.include(\"Unauthorized\");",
              "err": {},
              "uuid": "196c129d-abac-4231-ba89-f8fe09abd4a4",
              "parentUUID": "a3f5f11a-846b-4643-b762-18eee6479de3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should FAIL with Forbidden",
              "fullTitle": "Should test \"Delete location from user\" should FAIL with Forbidden",
              "timedOut": false,
              "duration": 404,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.put('/profile/locations/' + id)\nconsole.log(res.response.statusText);\nexpect(res.response.status).to.eql(403);\nexpect(res.response.statusText).to.include(\"Forbidden\");",
              "err": {},
              "uuid": "fe46ca60-3bfe-4c85-ad3b-0cb5403547a2",
              "parentUUID": "a3f5f11a-846b-4643-b762-18eee6479de3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "196c129d-abac-4231-ba89-f8fe09abd4a4",
            "fe46ca60-3bfe-4c85-ad3b-0cb5403547a2"
          ],
          "failures": [
            "a828385b-1725-42e7-9f01-1f567ef284e4",
            "0bd403cb-8d29-4a4a-915d-1a9e330dd53b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1712,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "6c561323-3fca-46f8-919d-69700aaeb20a",
          "title": "Should test \"Get location info",
          "fullFile": "C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\profile\\locations\\id\\get.location.info.spec.js",
          "file": "\\spec\\powder_watts\\api\\profile\\locations\\id\\get.location.info.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should GET user profile successfully",
              "fullTitle": "Should test \"Get location info should GET user profile successfully",
              "timedOut": false,
              "duration": 1689,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.get('/profile/locations/'+ id);\nconsole.log(res.status);\nexpect(res.status).to.eql(200);",
              "err": {},
              "uuid": "361f02bc-fc9f-4e5c-9dfc-52b92618ce0b",
              "parentUUID": "6c561323-3fca-46f8-919d-69700aaeb20a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "account does not exist",
              "fullTitle": "Should test \"Get location info account does not exist",
              "timedOut": false,
              "duration": 1695,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const res = await request.get('/profile/locations/'+ id, null, {\n    headers: {\n        'Authorization': '',\n        'Accept': 'application/json'\n    },\n});\nconsole.log(res.response.statusText);\nexpect(res.response.status).not.to.eql(200);\nexpect (res.response.statusText).to.include(\"Unauthorized\");\n//TODO AFTER FIING. GOT STATUS 200",
              "err": {
                "message": "TypeError: Cannot read properties of undefined (reading 'statusText')",
                "estack": "TypeError: Cannot read properties of undefined (reading 'statusText')\n    at Context.<anonymous> (C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\profile\\locations\\id\\get.location.info.spec.js:31:34)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": null
              },
              "uuid": "3f8a0522-0ef9-4e44-a937-aae12d7bc65a",
              "parentUUID": "6c561323-3fca-46f8-919d-69700aaeb20a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "361f02bc-fc9f-4e5c-9dfc-52b92618ce0b"
          ],
          "failures": [
            "3f8a0522-0ef9-4e44-a937-aae12d7bc65a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 3384,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e512a024-056f-4b64-8f57-e20461448815",
          "title": "Should test \"Add new location",
          "fullFile": "C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\profile\\locations\\post.add.location.spec.js",
          "file": "\\spec\\powder_watts\\api\\profile\\locations\\post.add.location.spec.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after all\" hook: should delete location for \"account does not exist\"",
              "fullTitle": "Should test \"Add new location \"after all\" hook: should delete location for \"account does not exist\"",
              "timedOut": false,
              "duration": 723,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const res = await request.delete('/profile/locations/' + id);\nconsole.log(res.statusText);\nexpect(res.status).to.eql(200);\nconsole.log(\"location with id \" + id + \" was deleted\" )",
              "err": {
                "message": "AssertionError: expected undefined to deeply equal 200",
                "estack": "AssertionError: expected undefined to deeply equal 200\n    at Context.<anonymous> (C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\profile\\locations\\post.add.location.spec.js:54:31)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": null
              },
              "uuid": "711b304a-ebae-47d1-806d-412a67ab820f",
              "parentUUID": "e512a024-056f-4b64-8f57-e20461448815",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should POST new location successfully",
              "fullTitle": "Should test \"Add new location should POST new location successfully",
              "timedOut": false,
              "duration": 729,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.post('/locations', creationDataProd);\nconsole.log(res.status);\nexpect(res.status).to.eql(200);\nid = res.data.data.location_id;\nlocation_key = res.data.data.location_key;\nconsole.log(id + location_key+ \" is created\")",
              "err": {},
              "uuid": "1fc04b4a-2c6b-4ed6-bd17-e97845fb7d08",
              "parentUUID": "e512a024-056f-4b64-8f57-e20461448815",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should POST add new location successfully",
              "fullTitle": "Should test \"Add new location should POST add new location successfully",
              "timedOut": false,
              "duration": 611,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const res = await request.post('/profile/locations', data);\nconsole.log(res.status);\nexpect(res.status).to.eql(200);",
              "err": {
                "message": "AssertionError: expected undefined to deeply equal 200",
                "estack": "AssertionError: expected undefined to deeply equal 200\n    at Context.<anonymous> (C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\profile\\locations\\post.add.location.spec.js:36:31)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": null
              },
              "uuid": "4c52fcbe-fa60-475d-83ce-27eb5c913624",
              "parentUUID": "e512a024-056f-4b64-8f57-e20461448815",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "account does not exist",
              "fullTitle": "Should test \"Add new location account does not exist",
              "timedOut": false,
              "duration": 409,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.custom.post('/profile/locations', data,{\n    headers: {\n        'Authorization': '',\n        'Accept': 'application/json'\n    },\n});\nconsole.log(res.response.statusText);\nexpect(res.response.status).not.to.eql(200);\nexpect (res.response.statusText).to.include(\"Unauthorized\");",
              "err": {},
              "uuid": "301e1013-5018-4ff5-b8e7-069bd2045488",
              "parentUUID": "e512a024-056f-4b64-8f57-e20461448815",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1fc04b4a-2c6b-4ed6-bd17-e97845fb7d08",
            "301e1013-5018-4ff5-b8e7-069bd2045488"
          ],
          "failures": [
            "4c52fcbe-fa60-475d-83ce-27eb5c913624"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1749,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ba50592f-7cbe-469c-979e-d6c025e51958",
          "title": "Should test \"Create bug or error report",
          "fullFile": "C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\profile\\post.bug.report.spec.js",
          "file": "\\spec\\powder_watts\\api\\profile\\post.bug.report.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should POST bug report successfully",
              "fullTitle": "Should test \"Create bug or error report should POST bug report successfully",
              "timedOut": false,
              "duration": 1155,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.post('/profile/report', data);\nconsole.log(res.status);\nexpect(res.status).to.eql(200);",
              "err": {},
              "uuid": "ab2ddc44-62b4-43e5-95f6-6670c7d2de9e",
              "parentUUID": "ba50592f-7cbe-469c-979e-d6c025e51958",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should FAIL with empty data ",
              "fullTitle": "Should test \"Create bug or error report should FAIL with empty data ",
              "timedOut": false,
              "duration": 270,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.post('/profile/report', emptyData);\nconsole.log(res.response.data.error);\nexpect(res.response.status).to.eql(400);\nexpect(res.response.data.message).to.include(\"Body is empty or is missing fields\");",
              "err": {},
              "uuid": "f1a8edf2-2b78-4007-ab1d-0867b07fb40f",
              "parentUUID": "ba50592f-7cbe-469c-979e-d6c025e51958",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail with wrong token",
              "fullTitle": "Should test \"Create bug or error report should fail with wrong token",
              "timedOut": false,
              "duration": 428,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.post('/profile/report', data, {\n    'Authorization': '111'\n});\nconsole.log(res.response.statusText);\nexpect(res.response.status).not.to.eql(200);\nexpect (res.response.statusText).to.include(\"Unauthorized\");",
              "err": {},
              "uuid": "cf0fac04-302f-436b-a656-16cac78cff92",
              "parentUUID": "ba50592f-7cbe-469c-979e-d6c025e51958",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should FAIL with wrong request type",
              "fullTitle": "Should test \"Create bug or error report should FAIL with wrong request type",
              "timedOut": false,
              "duration": 229,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.put('/profile/report', data);\nconsole.log(res.response.statusText);\nexpect(res.response.status).to.eql(403);\nexpect(res.response.statusText).to.include(\"Forbidden\");",
              "err": {},
              "uuid": "c7c26771-d6b7-4af5-925e-e7197fdd78e5",
              "parentUUID": "ba50592f-7cbe-469c-979e-d6c025e51958",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ab2ddc44-62b4-43e5-95f6-6670c7d2de9e",
            "f1a8edf2-2b78-4007-ab1d-0867b07fb40f",
            "cf0fac04-302f-436b-a656-16cac78cff92",
            "c7c26771-d6b7-4af5-925e-e7197fdd78e5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2082,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "1c45c8b9-84f4-4b9a-91d2-702d4545871e",
          "title": "Should test \"Update user profile",
          "fullFile": "C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\profile\\put.profile.spec.js",
          "file": "\\spec\\powder_watts\\api\\profile\\put.profile.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should PUT Update user profile successfully",
              "fullTitle": "Should test \"Update user profile should PUT Update user profile successfully",
              "timedOut": false,
              "duration": 825,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.put('/profile', data);\nexpect(res.status).to.eql(200);",
              "err": {},
              "uuid": "dc664d60-a7de-49f1-9d52-ec4f977292c2",
              "parentUUID": "1c45c8b9-84f4-4b9a-91d2-702d4545871e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "FAIL with Invalid request. Request body can not be empty",
              "fullTitle": "Should test \"Update user profile FAIL with Invalid request. Request body can not be empty",
              "timedOut": false,
              "duration": 401,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.put('/profile', {});\nexpect(res.status).to.eql(400);\nexpect(res.data.error).to.eql(\"BaseErrorX\");",
              "err": {},
              "uuid": "9cce3353-86c6-4e1a-b1a6-b539d1fa97fc",
              "parentUUID": "1c45c8b9-84f4-4b9a-91d2-702d4545871e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "FAIL with Unauthorized",
              "fullTitle": "Should test \"Update user profile FAIL with Unauthorized",
              "timedOut": false,
              "duration": 199,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.put('/profile', data, {\n    'Authorization': ''\n});\nexpect(res.status).to.eql(401);\nexpect(res.statusText).to.include(\"Unauthorized\");",
              "err": {},
              "uuid": "0cdd645d-fb45-44b8-b64a-b096d19cd824",
              "parentUUID": "1c45c8b9-84f4-4b9a-91d2-702d4545871e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should FAIL with Forbidden",
              "fullTitle": "Should test \"Update user profile should FAIL with Forbidden",
              "timedOut": false,
              "duration": 437,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.post('/profile', data);\nexpect(res.status).to.eql(403);\nexpect(res.statusText).to.include(\"Forbidden\");",
              "err": {},
              "uuid": "4d994ed1-9cab-4458-9ba6-a15d7d064063",
              "parentUUID": "1c45c8b9-84f4-4b9a-91d2-702d4545871e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dc664d60-a7de-49f1-9d52-ec4f977292c2",
            "9cce3353-86c6-4e1a-b1a6-b539d1fa97fc",
            "0cdd645d-fb45-44b8-b64a-b096d19cd824",
            "4d994ed1-9cab-4458-9ba6-a15d7d064063"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1862,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "3e9b2685-85c8-47db-9083-43b033cf86d9",
          "title": "Should test \"Get/searches switches history of system in some location\"",
          "fullFile": "C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\switch\\get.switch.history.spec.js",
          "file": "\\spec\\powder_watts\\api\\switch\\get.switch.history.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should GET switch history successfully",
              "fullTitle": "Should test \"Get/searches switches history of system in some location\" should GET switch history successfully",
              "timedOut": false,
              "duration": 687,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.get(`/switches/history?system_id=${id}`);\nexpect(res.status).to.eql(200);",
              "err": {},
              "uuid": "cc57bfc3-43c4-47c6-8b13-dfcc3af7b6e1",
              "parentUUID": "3e9b2685-85c8-47db-9083-43b033cf86d9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should a user to be unauthorized",
              "fullTitle": "Should test \"Get/searches switches history of system in some location\" should a user to be unauthorized",
              "timedOut": false,
              "duration": 212,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.get(`/switches/history?system_id=${id}`, null, {\n    'Authorization': '',\n});\nconsole.log(res.response.statusText);\nexpect(res.response.status).to.eql(401);\nexpect(res.response.statusText).to.eql(\"Unauthorized\");",
              "err": {},
              "uuid": "03d9b288-c6d2-42d5-ad72-a4d3b1678e49",
              "parentUUID": "3e9b2685-85c8-47db-9083-43b033cf86d9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail with empty parameter",
              "fullTitle": "Should test \"Get/searches switches history of system in some location\" should fail with empty parameter",
              "timedOut": false,
              "duration": 457,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.get('/switches/history?system_id=');\nconsole.log(res.response.statusText)\nexpect(res.response.status).to.eql(400)\nexpect(res.response.statusText).to.eql(\"Bad Request\");",
              "err": {},
              "uuid": "3a01f68f-a6f7-4413-b900-ae3f5888a125",
              "parentUUID": "3e9b2685-85c8-47db-9083-43b033cf86d9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail with no parameter",
              "fullTitle": "Should test \"Get/searches switches history of system in some location\" should fail with no parameter",
              "timedOut": false,
              "duration": 288,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.get('/switches/history?');\nconsole.log(res.response.statusText)\nexpect(res.response.status).to.eql(400)\nexpect(res.response.statusText).to.eql(\"Bad Request\");",
              "err": {},
              "uuid": "7be7835f-ec37-4955-98f9-0e748c33e394",
              "parentUUID": "3e9b2685-85c8-47db-9083-43b033cf86d9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cc57bfc3-43c4-47c6-8b13-dfcc3af7b6e1",
            "03d9b288-c6d2-42d5-ad72-a4d3b1678e49",
            "3a01f68f-a6f7-4413-b900-ae3f5888a125",
            "7be7835f-ec37-4955-98f9-0e748c33e394"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1644,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "83530bf7-a049-4f40-a3cb-ef997604f26b",
          "title": "Should test \"Delete switch\"",
          "fullFile": "C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\switch\\id\\delete.switch.by.id.spec.js",
          "file": "\\spec\\powder_watts\\api\\switch\\id\\delete.switch.by.id.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should POST new location successfully",
              "fullTitle": "Should test \"Delete switch\" should POST new location successfully",
              "timedOut": false,
              "duration": 1059,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.post('/switches', data);\nconsole.log(res.status);\nexpect(res.status).to.eql(200);\nid = res.data.data[0].switch_id;\nconsole.log(\"Switch with id \"+ id + \" is created\")",
              "err": {},
              "uuid": "f17ce473-db10-4ddc-96dc-e4273090b425",
              "parentUUID": "83530bf7-a049-4f40-a3cb-ef997604f26b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should DELETE switch successfully",
              "fullTitle": "Should test \"Delete switch\" should DELETE switch successfully",
              "timedOut": false,
              "duration": 734,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.delete('/switches/' + id);\nconsole.log(res.statusText);\nexpect(res.status).to.eql(200);\nconsole.log(\"Switch with id \"+ id + \" is deleted\")",
              "err": {},
              "uuid": "99030933-6bed-4deb-b1fc-801a6688ff16",
              "parentUUID": "83530bf7-a049-4f40-a3cb-ef997604f26b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should FAIL with Unauthorized",
              "fullTitle": "Should test \"Delete switch\" should FAIL with Unauthorized",
              "timedOut": false,
              "duration": 201,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.delete('/switches/' + id, {},\n    {\n        'Authorization': ''\n    },);\nconsole.log(res.response.data.message);\nexpect(res.response.status).to.eql(401);\nexpect(res.response.statusText).to.include(\"Unauthorized\");",
              "err": {},
              "uuid": "6d1f0615-06ce-46b6-8412-7812cfa617d9",
              "parentUUID": "83530bf7-a049-4f40-a3cb-ef997604f26b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should FAIL with wrong request type",
              "fullTitle": "Should test \"Delete switch\" should FAIL with wrong request type",
              "timedOut": false,
              "duration": 500,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.put('/switches/' + id)\nconsole.log(res.response.statusText);\nexpect(res.response.status).to.eql(415);\nexpect(res.response.statusText).to.include(\"Unsupported\");",
              "err": {},
              "uuid": "f4367162-b62f-4c4e-ace5-c17c4b5253b1",
              "parentUUID": "83530bf7-a049-4f40-a3cb-ef997604f26b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f17ce473-db10-4ddc-96dc-e4273090b425",
            "99030933-6bed-4deb-b1fc-801a6688ff16",
            "6d1f0615-06ce-46b6-8412-7812cfa617d9",
            "f4367162-b62f-4c4e-ace5-c17c4b5253b1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2494,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b8a3a2de-7522-4393-b1e9-0a1d2503317a",
          "title": "Should test \"Get switch by id",
          "fullFile": "C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\switch\\id\\get.switch.spec.js",
          "file": "\\spec\\powder_watts\\api\\switch\\id\\get.switch.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should GET user profile successfully",
              "fullTitle": "Should test \"Get switch by id should GET user profile successfully",
              "timedOut": false,
              "duration": 793,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.get('/switches/'+ id);\nconsole.log(res.status);\nexpect(res.status).to.eql(200);",
              "err": {},
              "uuid": "179b8a52-f319-4a54-b9c3-05ce05ecb9a9",
              "parentUUID": "b8a3a2de-7522-4393-b1e9-0a1d2503317a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "account does not exist",
              "fullTitle": "Should test \"Get switch by id account does not exist",
              "timedOut": false,
              "duration": 541,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const res = await request.get('/switches/'+ id, null, {\n    headers: {\n        'Authorization': '',\n        'Accept': 'application/json'\n    },\n});\n// console.log(res.response.statusText);\nexpect(res.status).not.to.eql(200);\nexpect (res.response.statusText).to.include(\"Unauthorized\");\n//TODO AFTER FIXING - STATUS 200 without token on prod",
              "err": {
                "message": "AssertionError: expected 200 to not deeply equal 200",
                "estack": "AssertionError: expected 200 to not deeply equal 200\n    at Context.<anonymous> (C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\switch\\id\\get.switch.spec.js:32:35)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": ""
              },
              "uuid": "20190b70-c5c8-48ad-b8b1-36a19d2f6149",
              "parentUUID": "b8a3a2de-7522-4393-b1e9-0a1d2503317a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "179b8a52-f319-4a54-b9c3-05ce05ecb9a9"
          ],
          "failures": [
            "20190b70-c5c8-48ad-b8b1-36a19d2f6149"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1334,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "92f7e151-a7c2-4ef5-bf0c-3a45f2b58b5c",
          "title": "Should test \"Start switch connection\"",
          "fullFile": "C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\switch\\id\\post.switch.connection.spec.js",
          "file": "\\spec\\powder_watts\\api\\switch\\id\\post.switch.connection.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should POST switch connection",
              "fullTitle": "Should test \"Start switch connection\" should POST switch connection",
              "timedOut": false,
              "duration": 1056,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.post('/switches/' + id + '/connect', null, {\n    \"Content-Type\": \"application/json\"\n});\nconsole.log(res.status);\nexpect(res.status).to.eql(204);",
              "err": {},
              "uuid": "2b6d89e4-e0c8-449c-b21d-c12e3ec736b8",
              "parentUUID": "92f7e151-a7c2-4ef5-bf0c-3a45f2b58b5c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "account does not exist",
              "fullTitle": "Should test \"Start switch connection\" account does not exist",
              "timedOut": false,
              "duration": 220,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.custom.post('/switches/'+id+'/connect', {},{\n    headers: {\n        'Authorization': '',\n        'Accept': 'application/json'\n    },\n});\nconsole.log(res.response.statusText);\nexpect(res.response.status).not.to.eql(200);\nexpect (res.response.statusText).to.include(\"Unauthorized\");",
              "err": {},
              "uuid": "82d5529e-8fa9-43d8-8d46-a665da25ca63",
              "parentUUID": "92f7e151-a7c2-4ef5-bf0c-3a45f2b58b5c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail without parameter",
              "fullTitle": "Should test \"Start switch connection\" should fail without parameter",
              "timedOut": false,
              "duration": 262,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.post('/switches/'+emptyId+'/connect');\nconsole.log(res.response.statusText);\nexpect(res.response.status).not.to.eql(200);",
              "err": {},
              "uuid": "dcc2ae0c-6b79-428f-b572-3569a44fabb2",
              "parentUUID": "92f7e151-a7c2-4ef5-bf0c-3a45f2b58b5c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2b6d89e4-e0c8-449c-b21d-c12e3ec736b8",
            "82d5529e-8fa9-43d8-8d46-a665da25ca63",
            "dcc2ae0c-6b79-428f-b572-3569a44fabb2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1538,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c25129d7-a0a1-4a2c-b17d-6d007075ee32",
          "title": "Should test \"Finish switch installation",
          "fullFile": "C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\switch\\id\\put.finish.switch.installation.spec.js",
          "file": "\\spec\\powder_watts\\api\\switch\\id\\put.finish.switch.installation.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should PUT switch mode successfully",
              "fullTitle": "Should test \"Finish switch installation should PUT switch mode successfully",
              "timedOut": false,
              "duration": 407,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const res = await request.put('/switches/' + id + '/install');\nconsole.log(res.status);\nexpect(res.status).to.eql(200);",
              "err": {
                "message": "AssertionError: expected undefined to deeply equal 200",
                "estack": "AssertionError: expected undefined to deeply equal 200\n    at Context.<anonymous> (C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\switch\\id\\put.finish.switch.installation.spec.js:22:31)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": null
              },
              "uuid": "bca7d44a-e3d3-44c2-b57f-6872ec270218",
              "parentUUID": "c25129d7-a0a1-4a2c-b17d-6d007075ee32",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "account does not exist",
              "fullTitle": "Should test \"Finish switch installation account does not exist",
              "timedOut": false,
              "duration": 197,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const res = await request.custom.put('/switches/' + id + '/install', {},{\n    headers: {\n        'Authorization': '',\n        'Accept': 'application/json'\n    },\n});\nconsole.log(res.response.statusText);\nexpect(res.response.status).not.to.eql(200);\nexpect (res.response.statusText).to.include(\"Unauthorized\");",
              "err": {
                "message": "AssertionError: expected 'Forbidden' to include 'Unauthorized'",
                "estack": "AssertionError: expected 'Forbidden' to include 'Unauthorized'\n    at Proxy.include (C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\node_modules\\chai\\lib\\chai\\core\\assertions.js:585:10)\n    at Proxy.chainableMethodWrapper (C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\node_modules\\chai\\lib\\chai\\utils\\addChainableMethod.js:113:49)\n    at Context.<anonymous> (C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\switch\\id\\put.finish.switch.installation.spec.js:34:45)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": null
              },
              "uuid": "8874760a-c7e6-48ea-881c-c2db7159088b",
              "parentUUID": "c25129d7-a0a1-4a2c-b17d-6d007075ee32",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail with Forbidden",
              "fullTitle": "Should test \"Finish switch installation should fail with Forbidden",
              "timedOut": false,
              "duration": 198,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.post('/switches/' + id + '/install');\nconsole.log(res.response.statusText);\nexpect(res.response.status).to.eql(403);\nexpect(res.response.statusText).to.include(\"Forbidden\");",
              "err": {},
              "uuid": "dca2af9f-6117-4253-bf59-f7155e34422c",
              "parentUUID": "c25129d7-a0a1-4a2c-b17d-6d007075ee32",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail with wrong id",
              "fullTitle": "Should test \"Finish switch installation should fail with wrong id",
              "timedOut": false,
              "duration": 517,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.put('/switches/' + wrongId + '/install');\nconsole.log(res.response.data.error);\nexpect(res.response.status).to.eql(403);",
              "err": {},
              "uuid": "10ee8698-faf2-4981-bd4b-a1680d12025f",
              "parentUUID": "c25129d7-a0a1-4a2c-b17d-6d007075ee32",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail with no property",
              "fullTitle": "Should test \"Finish switch installation should fail with no property",
              "timedOut": false,
              "duration": 420,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const res = await request.put('/switches/' + {} + '/install');\nconsole.log(res.response.data.message);\nexpect(res.response.status).to.eql(422);\nexpect(res.response.data.message).to.include('is a required property');",
              "err": {
                "message": "AssertionError: expected 400 to deeply equal 422",
                "estack": "AssertionError: expected 400 to deeply equal 422\n    at Context.<anonymous> (C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\switch\\id\\put.finish.switch.installation.spec.js:54:40)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": "- 400\n+ 422\n"
              },
              "uuid": "882b8877-9083-4622-baeb-248645f443e5",
              "parentUUID": "c25129d7-a0a1-4a2c-b17d-6d007075ee32",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dca2af9f-6117-4253-bf59-f7155e34422c",
            "10ee8698-faf2-4981-bd4b-a1680d12025f"
          ],
          "failures": [
            "bca7d44a-e3d3-44c2-b57f-6872ec270218",
            "8874760a-c7e6-48ea-881c-c2db7159088b",
            "882b8877-9083-4622-baeb-248645f443e5"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1739,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "8c776643-517c-42e9-96e4-6f45428aea8b",
          "title": "Should test \"Update switch by id",
          "fullFile": "C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\switch\\id\\put.update.switch.spec.js",
          "file": "\\spec\\powder_watts\\api\\switch\\id\\put.update.switch.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should PUT switch mode successfully",
              "fullTitle": "Should test \"Update switch by id should PUT switch mode successfully",
              "timedOut": false,
              "duration": 365,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const res = await request.put('/switches/' + id, data);\nconsole.log(res.status);\nexpect(res.status).to.eql(200);",
              "err": {
                "message": "AssertionError: expected undefined to deeply equal 200",
                "estack": "AssertionError: expected undefined to deeply equal 200\n    at Context.<anonymous> (C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\switch\\id\\put.update.switch.spec.js:25:31)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": null
              },
              "uuid": "afc6c180-74b7-404e-a2e4-eb82960459f7",
              "parentUUID": "8c776643-517c-42e9-96e4-6f45428aea8b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "account does not exist",
              "fullTitle": "Should test \"Update switch by id account does not exist",
              "timedOut": false,
              "duration": 465,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.custom.put('/switches/' + id, data,{\n    headers: {\n        'Authorization': '',\n        'Accept': 'application/json'\n    },\n});\nconsole.log(res.response.statusText);\nexpect(res.response.status).not.to.eql(200);\nexpect (res.response.statusText).to.include(\"Unauthorized\");",
              "err": {},
              "uuid": "8f41066f-7063-44eb-80ee-3d8a63e4ac61",
              "parentUUID": "8c776643-517c-42e9-96e4-6f45428aea8b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail with Forbidden",
              "fullTitle": "Should test \"Update switch by id should fail with Forbidden",
              "timedOut": false,
              "duration": 192,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.post('/switches/' + id, data);\nconsole.log(res.response.statusText);\nexpect(res.response.status).to.eql(403);\nexpect(res.response.statusText).to.include(\"Forbidden\");",
              "err": {},
              "uuid": "ce9493e0-d58b-4de9-9f7d-0060b5f9930d",
              "parentUUID": "8c776643-517c-42e9-96e4-6f45428aea8b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail with empty data",
              "fullTitle": "Should test \"Update switch by id should fail with empty data",
              "timedOut": false,
              "duration": 509,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const res = await request.put('/switches/' + id, emptyData);\nconsole.log(res.response.data.error);\nexpect(res.response.status).to.eql(422);",
              "err": {
                "message": "AssertionError: expected 400 to deeply equal 422",
                "estack": "AssertionError: expected 400 to deeply equal 422\n    at Context.<anonymous> (C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\switch\\id\\put.update.switch.spec.js:50:40)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": "- 400\n+ 422\n"
              },
              "uuid": "503b466d-d91d-4481-bd4c-fd3257067906",
              "parentUUID": "8c776643-517c-42e9-96e4-6f45428aea8b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail with wrong id",
              "fullTitle": "Should test \"Update switch by id should fail with wrong id",
              "timedOut": false,
              "duration": 616,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.put('/switches/' + wrongId, data);\nconsole.log(res.response.data.error);\nexpect(res.response.status).to.eql(403);",
              "err": {},
              "uuid": "089ee891-e65b-4115-9ec5-99da9609c329",
              "parentUUID": "8c776643-517c-42e9-96e4-6f45428aea8b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail with no property",
              "fullTitle": "Should test \"Update switch by id should fail with no property",
              "timedOut": false,
              "duration": 410,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const res = await request.put('/switches/', data);\nconsole.log(res.response.data.message);\nexpect(res.response.status).to.eql(422);\nexpect(res.response.data.message).to.include('is a required property');",
              "err": {
                "message": "AssertionError: expected 403 to deeply equal 422",
                "estack": "AssertionError: expected 403 to deeply equal 422\n    at Context.<anonymous> (C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\switch\\id\\put.update.switch.spec.js:62:40)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": "- 403\n+ 422\n"
              },
              "uuid": "5f62aba2-6bbb-4c92-976b-0ec92f9d5273",
              "parentUUID": "8c776643-517c-42e9-96e4-6f45428aea8b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8f41066f-7063-44eb-80ee-3d8a63e4ac61",
            "ce9493e0-d58b-4de9-9f7d-0060b5f9930d",
            "089ee891-e65b-4115-9ec5-99da9609c329"
          ],
          "failures": [
            "afc6c180-74b7-404e-a2e4-eb82960459f7",
            "503b466d-d91d-4481-bd4c-fd3257067906",
            "5f62aba2-6bbb-4c92-976b-0ec92f9d5273"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2557,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "68d84bf3-0384-470e-8569-589c32105c70",
          "title": "Should test \"create new switch",
          "fullFile": "C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\switch\\post.create.new.switch.spec.js",
          "file": "\\spec\\powder_watts\\api\\switch\\post.create.new.switch.spec.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after all\" hook: should delete location in \"Should test \"create new switch\"",
              "fullTitle": "Should test \"create new switch \"after all\" hook: should delete location in \"Should test \"create new switch\"",
              "timedOut": false,
              "duration": 842,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.delete('/switches/' + id);\nconsole.log(res.statusText);\nexpect(res.status).to.eql(200);\nconsole.log(\"Switch with id \"+ id + \" is deleted\")",
              "err": {},
              "uuid": "938d2ec1-162f-4332-b6cf-95354f1d8e7b",
              "parentUUID": "68d84bf3-0384-470e-8569-589c32105c70",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should POST new switch successfully",
              "fullTitle": "Should test \"create new switch should POST new switch successfully",
              "timedOut": false,
              "duration": 953,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.post('/switches', data);\nconsole.log(res.status);\nexpect(res.status).to.eql(200);\nid = res.data.data[0].switch_id;\nconsole.log(\"Switch with id \"+ id + \" is created\")",
              "err": {},
              "uuid": "38f2ff64-254b-4c07-b503-f4bbfb1cf674",
              "parentUUID": "68d84bf3-0384-470e-8569-589c32105c70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "account does not exist",
              "fullTitle": "Should test \"create new switch account does not exist",
              "timedOut": false,
              "duration": 201,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.custom.post('/switches', data,{\n    headers: {\n        'Authorization': '',\n        'Accept': 'application/json'\n    },\n});\nconsole.log(res.response.statusText);\nexpect(res.response.status).not.to.eql(200);\nexpect (res.response.statusText).to.include(\"Unauthorized\");",
              "err": {},
              "uuid": "66a89708-f245-4ed3-9738-93ec90fabd99",
              "parentUUID": "68d84bf3-0384-470e-8569-589c32105c70",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "38f2ff64-254b-4c07-b503-f4bbfb1cf674",
            "66a89708-f245-4ed3-9738-93ec90fabd99"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1154,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "4e33d905-27d0-4b01-9374-55b2933107d5",
          "title": "Should test \"Change/switch working mode (manual/auto)",
          "fullFile": "C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\switch\\put.change.switch.mode.spec.js",
          "file": "\\spec\\powder_watts\\api\\switch\\put.change.switch.mode.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should PUT switch mode successfully",
              "fullTitle": "Should test \"Change/switch working mode (manual/auto) should PUT switch mode successfully",
              "timedOut": false,
              "duration": 569,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.put('/switches/mode?system_id=' + id, data);\nconsole.log(res.status);\nexpect(res.status).to.eql(200);",
              "err": {},
              "uuid": "2e09e117-29f8-43cc-a2fd-4e26ffcc156b",
              "parentUUID": "4e33d905-27d0-4b01-9374-55b2933107d5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "account does not exist",
              "fullTitle": "Should test \"Change/switch working mode (manual/auto) account does not exist",
              "timedOut": false,
              "duration": 413,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.custom.put('/switches/mode?system_id=' + id, data,{\n    headers: {\n        'Authorization': 'qqq',\n        'Accept': 'application/json'\n    },\n});\nconsole.log(res.response.statusText);\nexpect(res.response.status).not.to.eql(200);\nexpect (res.response.statusText).to.include(\"Unauthorized\");",
              "err": {},
              "uuid": "8b3a36e7-cc98-4609-93dd-8674bef07697",
              "parentUUID": "4e33d905-27d0-4b01-9374-55b2933107d5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail with Forbidden",
              "fullTitle": "Should test \"Change/switch working mode (manual/auto) should fail with Forbidden",
              "timedOut": false,
              "duration": 194,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.post('/switches/mode?system_id=' + id, data);\nconsole.log(res.response.statusText);\nexpect(res.response.status).to.eql(403);\nexpect(res.response.statusText).to.include(\"Forbidden\");",
              "err": {},
              "uuid": "ff29bca6-5e32-4405-9699-e9ed73c4e151",
              "parentUUID": "4e33d905-27d0-4b01-9374-55b2933107d5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail with empty data",
              "fullTitle": "Should test \"Change/switch working mode (manual/auto) should fail with empty data",
              "timedOut": false,
              "duration": 519,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.put('/switches/mode?system_id=' + id, emptyData);\nconsole.log(res.response.data.error);\nexpect(res.response.status).to.eql(422);",
              "err": {},
              "uuid": "8afe96fc-3948-4116-a89b-ade66dbfa9cd",
              "parentUUID": "4e33d905-27d0-4b01-9374-55b2933107d5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail with wrong id",
              "fullTitle": "Should test \"Change/switch working mode (manual/auto) should fail with wrong id",
              "timedOut": false,
              "duration": 600,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.put('/switches/mode?system_id=' + wrongId, data);\nconsole.log(res.response.data.error);\nexpect(res.response.status).to.eql(403);",
              "err": {},
              "uuid": "6a488487-33a2-41fe-ac8e-a3b4d048b333",
              "parentUUID": "4e33d905-27d0-4b01-9374-55b2933107d5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail with no property",
              "fullTitle": "Should test \"Change/switch working mode (manual/auto) should fail with no property",
              "timedOut": false,
              "duration": 303,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.put('/switches/mode?', data);\nconsole.log(res.response.data.message);\nexpect(res.response.status).to.eql(422);\nexpect(res.response.data.message).to.include('is a required property');",
              "err": {},
              "uuid": "f64c4494-d042-4ead-8a86-6429fb38ee71",
              "parentUUID": "4e33d905-27d0-4b01-9374-55b2933107d5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2e09e117-29f8-43cc-a2fd-4e26ffcc156b",
            "8b3a36e7-cc98-4609-93dd-8674bef07697",
            "ff29bca6-5e32-4405-9699-e9ed73c4e151",
            "8afe96fc-3948-4116-a89b-ade66dbfa9cd",
            "6a488487-33a2-41fe-ac8e-a3b4d048b333",
            "f64c4494-d042-4ead-8a86-6429fb38ee71"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2598,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "34056854-7adf-4c98-8d88-1e9004ed0d2f",
          "title": "Should test \"In manual mode toggle system heating panel",
          "fullFile": "C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\switch\\put.toddle.switch.spec.js",
          "file": "\\spec\\powder_watts\\api\\switch\\put.toddle.switch.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should PUT switch mode successfully",
              "fullTitle": "Should test \"In manual mode toggle system heating panel should PUT switch mode successfully",
              "timedOut": false,
              "duration": 4516,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.put('/switches/status?system_id=' + id+'&ignore_mode=' + mode, {}, {\n    'Accept': 'application/json'\n});\nconsole.log(res.status);\nexpect(res.status).to.eql(200);",
              "err": {},
              "uuid": "6af7b059-951d-4e2a-a74d-0c2acf80d91c",
              "parentUUID": "34056854-7adf-4c98-8d88-1e9004ed0d2f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "account does not exist",
              "fullTitle": "Should test \"In manual mode toggle system heating panel account does not exist",
              "timedOut": false,
              "duration": 255,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.custom.put('/switches/status?system_id=' + id+'&ignore_mode=' + mode,null, {\n    headers: {\n        'Authorization': 'qqq',\n        'Accept': 'application/json'\n    },\n});\nconsole.log(res.response.statusText);\nexpect(res.response.status).not.to.eql(200);\nexpect (res.response.statusText).to.include(\"Unauthorized\");",
              "err": {},
              "uuid": "06f6c04b-cf5b-4afa-b50e-0ea92b584bd4",
              "parentUUID": "34056854-7adf-4c98-8d88-1e9004ed0d2f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail with Forbidden",
              "fullTitle": "Should test \"In manual mode toggle system heating panel should fail with Forbidden",
              "timedOut": false,
              "duration": 189,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.post('/switches/status?system_id=' + id+'&ignore_mode=' + mode, {}, {\n    'Accept': 'application/json'\n});\nconsole.log(res.response.statusText);\nexpect(res.response.status).to.eql(403);\nexpect(res.response.statusText).to.include(\"Forbidden\");",
              "err": {},
              "uuid": "3a9c51f3-bac3-4bfc-9dd0-fb1e83f2d589",
              "parentUUID": "34056854-7adf-4c98-8d88-1e9004ed0d2f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail with wrong data in ignore_mode",
              "fullTitle": "Should test \"In manual mode toggle system heating panel should fail with wrong data in ignore_mode",
              "timedOut": false,
              "duration": 494,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.put('/switches/status?system_id=' + id+'&ignore_mode=' + wrongMode,{}, {\n    'Accept': 'application/json'\n});\nconsole.log(res.response.data.error);\nexpect(res.response.status).to.eql(422);",
              "err": {},
              "uuid": "cbe8ebcd-b01c-42f6-a574-4354f4e31bfe",
              "parentUUID": "34056854-7adf-4c98-8d88-1e9004ed0d2f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail with wrong id",
              "fullTitle": "Should test \"In manual mode toggle system heating panel should fail with wrong id",
              "timedOut": false,
              "duration": 364,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.put('/switches/status?system_id=' + wrongId +'&ignore_mode=' + mode,{}, {\n    'Accept': 'application/json'\n});\nconsole.log(res.response.data.error);\nexpect(res.response.status).to.eql(403);",
              "err": {},
              "uuid": "373a933d-0828-4e04-bdbd-1b40352f5539",
              "parentUUID": "34056854-7adf-4c98-8d88-1e9004ed0d2f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail with empty parameter ",
              "fullTitle": "Should test \"In manual mode toggle system heating panel should fail with empty parameter ",
              "timedOut": false,
              "duration": 295,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const res = await request.put('/switches/status?system_id=' + '' +'&ignore_mode=' + mode,{}, {\n    'Accept': 'application/json'\n});\nconsole.log(res.response.data.error);\nexpect(res.response.status).to.eql(422);\n//TODO after fixing. STATUS 500 WiTH EMPTY PARAMETER",
              "err": {
                "message": "AssertionError: expected 500 to deeply equal 422",
                "estack": "AssertionError: expected 500 to deeply equal 422\n    at Context.<anonymous> (C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\switch\\put.toddle.switch.spec.js:71:40)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": "- 500\n+ 422\n"
              },
              "uuid": "6c3c3736-210f-4e6d-8593-503a82b9c41a",
              "parentUUID": "34056854-7adf-4c98-8d88-1e9004ed0d2f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6af7b059-951d-4e2a-a74d-0c2acf80d91c",
            "06f6c04b-cf5b-4afa-b50e-0ea92b584bd4",
            "3a9c51f3-bac3-4bfc-9dd0-fb1e83f2d589",
            "cbe8ebcd-b01c-42f6-a574-4354f4e31bfe",
            "373a933d-0828-4e04-bdbd-1b40352f5539"
          ],
          "failures": [
            "6c3c3736-210f-4e6d-8593-503a82b9c41a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 6113,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "339e8f77-5f71-46ed-ab2d-7637bee5895c",
          "title": "Should test \"Check system installation status\"",
          "fullFile": "C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\systems\\get.check.system.intallation.status.spec.js",
          "file": "\\spec\\powder_watts\\api\\systems\\get.check.system.intallation.status.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should GET status successfully",
              "fullTitle": "Should test \"Check system installation status\" should GET status successfully",
              "timedOut": false,
              "duration": 441,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.get('/systems/' + id + '/installation_status');\nconsole.log(res.statusText);\nexpect(res.status).to.eql(200);",
              "err": {},
              "uuid": "4ce95c12-91b7-453c-ac6c-af2c4be61480",
              "parentUUID": "339e8f77-5f71-46ed-ab2d-7637bee5895c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should a user to be unauthorized",
              "fullTitle": "Should test \"Check system installation status\" should a user to be unauthorized",
              "timedOut": false,
              "duration": 200,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.get('/systems/' + id + '/installation_status', {}, {\n    'Authorization': '',\n});\nconsole.log(res.response.statusText);\nexpect(res.response.status).to.eql(401);\nexpect(res.response.statusText).to.eql(\"Unauthorized\");",
              "err": {},
              "uuid": "37f16d0e-d50e-4e62-8555-f78fa3720fa9",
              "parentUUID": "339e8f77-5f71-46ed-ab2d-7637bee5895c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail with wrong id",
              "fullTitle": "Should test \"Check system installation status\" should fail with wrong id",
              "timedOut": false,
              "duration": 359,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const res = await request.get('/systems/' + wrongId + '/installation_status');\nconsole.log(res.response.statusText)\nexpect(res.response.status).to.eql(403)\nexpect(res.response.statusText).to.eql(\"Forbidden\");",
              "err": {
                "message": "AssertionError: expected 400 to deeply equal 403",
                "estack": "AssertionError: expected 400 to deeply equal 403\n    at Context.<anonymous> (C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\systems\\get.check.system.intallation.status.spec.js:36:40)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": "- 400\n+ 403\n"
              },
              "uuid": "3f8015cd-e8dc-4013-8597-7ca50efab61d",
              "parentUUID": "339e8f77-5f71-46ed-ab2d-7637bee5895c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail with empty parameter",
              "fullTitle": "Should test \"Check system installation status\" should fail with empty parameter",
              "timedOut": false,
              "duration": 405,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.get('/systems/' + {} + '/installation_status');\nconsole.log(res.response.statusText)\nexpect(res.response.status).to.eql(400)\nexpect(res.response.statusText).to.eql(\"Bad Request\");",
              "err": {},
              "uuid": "f5af4235-b06d-47a4-85a1-4a68b9257578",
              "parentUUID": "339e8f77-5f71-46ed-ab2d-7637bee5895c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4ce95c12-91b7-453c-ac6c-af2c4be61480",
            "37f16d0e-d50e-4e62-8555-f78fa3720fa9",
            "f5af4235-b06d-47a4-85a1-4a68b9257578"
          ],
          "failures": [
            "3f8015cd-e8dc-4013-8597-7ca50efab61d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1405,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "507add6b-5294-451c-accb-de71a04c5ed8",
          "title": "Should test \"Get info about cameras and switches of some system in some location\"",
          "fullFile": "C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\systems\\get.info.about.cameras.spec.js",
          "file": "\\spec\\powder_watts\\api\\systems\\get.info.about.cameras.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should GET events successfully",
              "fullTitle": "Should test \"Get info about cameras and switches of some system in some location\" should GET events successfully",
              "timedOut": false,
              "duration": 499,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.get('/systems/devices?system_id=' + id);\nexpect(res.status).to.eql(200);",
              "err": {},
              "uuid": "e06ad5b1-6a1a-47d9-a3b3-a1d0560c2518",
              "parentUUID": "507add6b-5294-451c-accb-de71a04c5ed8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should a user to be unauthorized",
              "fullTitle": "Should test \"Get info about cameras and switches of some system in some location\" should a user to be unauthorized",
              "timedOut": false,
              "duration": 191,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.get('/systems/devices?system_id=' + id, {}, {\n    'Authorization': '',\n});\nconsole.log(res.response.statusText);\nexpect(res.response.status).to.eql(401);\nexpect(res.response.statusText).to.eql(\"Unauthorized\");",
              "err": {},
              "uuid": "e2aaa1ef-0d2c-41b5-afd8-b82e8ee0a363",
              "parentUUID": "507add6b-5294-451c-accb-de71a04c5ed8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail with wrong id",
              "fullTitle": "Should test \"Get info about cameras and switches of some system in some location\" should fail with wrong id",
              "timedOut": false,
              "duration": 290,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const res = await request.get('/systems/devices?system_id=' + wrongId);\nconsole.log(res.response.statusText)\nexpect(res.response.status).to.eql(404)\nexpect(res.response.statusText).to.eql(\"Not Found\");",
              "err": {
                "message": "AssertionError: expected 400 to deeply equal 404",
                "estack": "AssertionError: expected 400 to deeply equal 404\n    at Context.<anonymous> (C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\systems\\get.info.about.cameras.spec.js:35:40)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": "- 400\n+ 404\n"
              },
              "uuid": "d05fdea4-456f-47c4-bd5f-244fcea081ff",
              "parentUUID": "507add6b-5294-451c-accb-de71a04c5ed8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail with empty parameter",
              "fullTitle": "Should test \"Get info about cameras and switches of some system in some location\" should fail with empty parameter",
              "timedOut": false,
              "duration": 289,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.get('/systems/devices?system_id=');\nconsole.log(res.response.statusText)\nexpect(res.response.status).to.eql(400)\nexpect(res.response.statusText).to.eql(\"Bad Request\");",
              "err": {},
              "uuid": "539c3bde-4c11-40dd-acfc-265f02d760f8",
              "parentUUID": "507add6b-5294-451c-accb-de71a04c5ed8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e06ad5b1-6a1a-47d9-a3b3-a1d0560c2518",
            "e2aaa1ef-0d2c-41b5-afd8-b82e8ee0a363",
            "539c3bde-4c11-40dd-acfc-265f02d760f8"
          ],
          "failures": [
            "d05fdea4-456f-47c4-bd5f-244fcea081ff"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1269,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "78411026-adff-4e52-adc7-a995bfaf08ab",
          "title": "Should test \"Check system installation status",
          "fullFile": "C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\systems\\get.snooze.system.spec.js",
          "file": "\\spec\\powder_watts\\api\\systems\\get.snooze.system.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should GET system installation status of ile successfully",
              "fullTitle": "Should test \"Check system installation status should GET system installation status of ile successfully",
              "timedOut": false,
              "duration": 561,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.get('/systems/' + id + '/snooze');\nconsole.log(res.status);\nexpect(res.status).to.eql(200);",
              "err": {},
              "uuid": "0ce51348-cd61-474c-8bb4-dfadb8ca46a0",
              "parentUUID": "78411026-adff-4e52-adc7-a995bfaf08ab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "account does not exist",
              "fullTitle": "Should test \"Check system installation status account does not exist",
              "timedOut": false,
              "duration": 896,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const res = await request.get('/systems/' + id + '/snooze', null, {\n    headers: {\n        'Authorization': '',\n        'Accept': 'application/json'\n    },\n});\n// console.log(res.response.statusText);\nexpect(res.status).not.to.eql(200);\nexpect (res.response.statusText).to.include(\"Unauthorized\");\n//TODO AFTER FIXING - STATUS 200 without token on prod",
              "err": {
                "message": "AssertionError: expected 200 to not deeply equal 200",
                "estack": "AssertionError: expected 200 to not deeply equal 200\n    at Context.<anonymous> (C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\systems\\get.snooze.system.spec.js:32:35)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": ""
              },
              "uuid": "bc88d3bb-2fe8-437c-b1dd-9c853f86bfc5",
              "parentUUID": "78411026-adff-4e52-adc7-a995bfaf08ab",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0ce51348-cd61-474c-8bb4-dfadb8ca46a0"
          ],
          "failures": [
            "bc88d3bb-2fe8-437c-b1dd-9c853f86bfc5"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1457,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "27ca2caa-44c6-4bc9-9170-772d9486a07f",
          "title": "Should test \"Delete system\"",
          "fullFile": "C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\systems\\id\\delete.system.spec.js",
          "file": "\\spec\\powder_watts\\api\\systems\\id\\delete.system.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should POST new system successfully",
              "fullTitle": "Should test \"Delete system\" should POST new system successfully",
              "timedOut": false,
              "duration": 394,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.post('/systems/', data);\nconsole.log(res.status);\nexpect(res.status).to.eql(200);\nid = res.data.data.id;\nconsole.log(\"system with id \" + id + \" was created\")",
              "err": {},
              "uuid": "b0a3f370-da0a-46c9-a735-2a2aea5beca0",
              "parentUUID": "27ca2caa-44c6-4bc9-9170-772d9486a07f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should DELETE system successfully",
              "fullTitle": "Should test \"Delete system\" should DELETE system successfully",
              "timedOut": false,
              "duration": 864,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.delete('/systems/' + id);\nconsole.log(res.statusText);\nexpect(res.status).to.eql(200);\nconsole.log(\"system with id \"+ id + \" is deleted\")",
              "err": {},
              "uuid": "3a723e1e-c509-41be-99c4-afb412649d14",
              "parentUUID": "27ca2caa-44c6-4bc9-9170-772d9486a07f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should FAIL with Unauthorized",
              "fullTitle": "Should test \"Delete system\" should FAIL with Unauthorized",
              "timedOut": false,
              "duration": 195,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.delete('/systems/' + id, {},\n    {\n        'Authorization': ''\n    },);\nconsole.log(res.response.data.message);\nexpect(res.response.status).to.eql(401);\nexpect(res.response.statusText).to.include(\"Unauthorized\");",
              "err": {},
              "uuid": "a0c6e61c-6d92-41e5-9d0b-9c5e66c49177",
              "parentUUID": "27ca2caa-44c6-4bc9-9170-772d9486a07f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail with wrong id",
              "fullTitle": "Should test \"Delete system\" should fail with wrong id",
              "timedOut": false,
              "duration": 564,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.delete('/systems/' + wrongId);\nconsole.log(res.response.data.message);\nexpect(res.response.status).to.eql(403);",
              "err": {},
              "uuid": "82c68d3b-6774-4623-919a-3074b74cbb78",
              "parentUUID": "27ca2caa-44c6-4bc9-9170-772d9486a07f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should FAIL with wrong request type",
              "fullTitle": "Should test \"Delete system\" should FAIL with wrong request type",
              "timedOut": false,
              "duration": 260,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.put('/systems/' + id)\nconsole.log(res.response.statusText);\nexpect(res.response.status).to.eql(415);\nexpect(res.response.statusText).to.include(\"Unsupported\");",
              "err": {},
              "uuid": "5100d058-9507-45c2-8d23-66466cc6c94b",
              "parentUUID": "27ca2caa-44c6-4bc9-9170-772d9486a07f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b0a3f370-da0a-46c9-a735-2a2aea5beca0",
            "3a723e1e-c509-41be-99c4-afb412649d14",
            "a0c6e61c-6d92-41e5-9d0b-9c5e66c49177",
            "82c68d3b-6774-4623-919a-3074b74cbb78",
            "5100d058-9507-45c2-8d23-66466cc6c94b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2277,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b122ebac-dab7-4c9f-ac0d-e10904d6f282",
          "title": "Should test \"Get events of some system\"",
          "fullFile": "C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\systems\\id\\get.events.of.system.spec.js",
          "file": "\\spec\\powder_watts\\api\\systems\\id\\get.events.of.system.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should GET events successfully",
              "fullTitle": "Should test \"Get events of some system\" should GET events successfully",
              "timedOut": false,
              "duration": 428,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.get('/systems/' + id + '/events');\nexpect(res.status).to.eql(200);",
              "err": {},
              "uuid": "b5e0960e-01f3-48d0-9529-a27c63bd9177",
              "parentUUID": "b122ebac-dab7-4c9f-ac0d-e10904d6f282",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should a user to be unauthorized",
              "fullTitle": "Should test \"Get events of some system\" should a user to be unauthorized",
              "timedOut": false,
              "duration": 428,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.get('/systems/' + id + '/events', {}, {\n    'Authorization': '',\n});\nconsole.log(res.response.statusText);\nexpect(res.response.status).to.eql(401);\nexpect(res.response.statusText).to.eql(\"Unauthorized\");",
              "err": {},
              "uuid": "e1d91f9c-92d4-4ad1-a7ec-dcf4f6b93a81",
              "parentUUID": "b122ebac-dab7-4c9f-ac0d-e10904d6f282",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail with wrong id",
              "fullTitle": "Should test \"Get events of some system\" should fail with wrong id",
              "timedOut": false,
              "duration": 302,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.get('/systems/' + wrongId + '/events');\nconsole.log(res.response.statusText)\nexpect(res.response.status).to.eql(400)\nexpect(res.response.statusText).to.eql(\"Bad Request\");\n//TODO AFTER FIXING. Got status 200 with wrong id",
              "err": {},
              "uuid": "4d9c115a-77ab-41d8-a182-83eb578737b9",
              "parentUUID": "b122ebac-dab7-4c9f-ac0d-e10904d6f282",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail with empty parameter",
              "fullTitle": "Should test \"Get events of some system\" should fail with empty parameter",
              "timedOut": false,
              "duration": 404,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.get('/systems/'  + {} + '/events');\nconsole.log(res.response.statusText)\nexpect(res.response.status).to.eql(400)\nexpect(res.response.statusText).to.eql(\"Bad Request\");",
              "err": {},
              "uuid": "c4d16ef2-08a8-4513-b74e-a6636c631fd9",
              "parentUUID": "b122ebac-dab7-4c9f-ac0d-e10904d6f282",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b5e0960e-01f3-48d0-9529-a27c63bd9177",
            "e1d91f9c-92d4-4ad1-a7ec-dcf4f6b93a81",
            "4d9c115a-77ab-41d8-a182-83eb578737b9",
            "c4d16ef2-08a8-4513-b74e-a6636c631fd9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1562,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e577d9a7-94f3-4e30-b20d-68751a7dd36b",
          "title": "Should test \"Update system by id",
          "fullFile": "C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\systems\\id\\put.update.system.spec.js",
          "file": "\\spec\\powder_watts\\api\\systems\\id\\put.update.system.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should PUT system successfully",
              "fullTitle": "Should test \"Update system by id should PUT system successfully",
              "timedOut": false,
              "duration": 493,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const res = await request.put('/systems/' + id, data);\nconsole.log(res.status);\nexpect(res.status).to.eql(200);",
              "err": {
                "message": "AssertionError: expected undefined to deeply equal 200",
                "estack": "AssertionError: expected undefined to deeply equal 200\n    at Context.<anonymous> (C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\systems\\id\\put.update.system.spec.js:23:31)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": null
              },
              "uuid": "e7f20f72-e491-44af-a337-59425d68f763",
              "parentUUID": "e577d9a7-94f3-4e30-b20d-68751a7dd36b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "account does not exist",
              "fullTitle": "Should test \"Update system by id account does not exist",
              "timedOut": false,
              "duration": 401,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.custom.put('/systems/' + id, data,{\n    headers: {\n        'Authorization': '',\n        'Accept': 'application/json'\n    },\n});\nconsole.log(res.response.statusText);\nexpect(res.response.status).not.to.eql(200);\nexpect (res.response.statusText).to.include(\"Unauthorized\");",
              "err": {},
              "uuid": "903bfe85-3fde-48ce-8691-f312a9507370",
              "parentUUID": "e577d9a7-94f3-4e30-b20d-68751a7dd36b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail with Forbidden",
              "fullTitle": "Should test \"Update system by id should fail with Forbidden",
              "timedOut": false,
              "duration": 419,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.post('/systems/' + id, data);\nconsole.log(res.response.statusText);\nexpect(res.response.status).to.eql(403);\nexpect(res.response.statusText).to.include(\"Forbidden\");",
              "err": {},
              "uuid": "29e9f2d0-d99e-48f4-a4bc-d35cd62b4c47",
              "parentUUID": "e577d9a7-94f3-4e30-b20d-68751a7dd36b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail with empty data",
              "fullTitle": "Should test \"Update system by id should fail with empty data",
              "timedOut": false,
              "duration": 481,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const res = await request.put('/systems/' + id, emptyData,\n    {'Content-Type': 'application/json'});\nconsole.log(res.response.data.error);\nexpect(res.response.status).to.eql(400);\nexpect(res.response.data.message).to.include(\"is empty or is missing fields\")",
              "err": {
                "message": "AssertionError: expected 500 to deeply equal 400",
                "estack": "AssertionError: expected 500 to deeply equal 400\n    at Context.<anonymous> (C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\systems\\id\\put.update.system.spec.js:49:40)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": "- 500\n+ 400\n"
              },
              "uuid": "d922b266-c4b9-4fea-8d93-0e57d4b752c6",
              "parentUUID": "e577d9a7-94f3-4e30-b20d-68751a7dd36b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail with wrong id",
              "fullTitle": "Should test \"Update system by id should fail with wrong id",
              "timedOut": false,
              "duration": 252,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const res = await request.put('/systems/' + wrongId, data);\nconsole.log(res.response.data.error);\nexpect(res.response.status).to.eql(403);",
              "err": {
                "message": "AssertionError: expected 500 to deeply equal 403",
                "estack": "AssertionError: expected 500 to deeply equal 403\n    at Context.<anonymous> (C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\systems\\id\\put.update.system.spec.js:56:40)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": "- 500\n+ 403\n"
              },
              "uuid": "07f625ef-7971-49f9-824e-b96ba13b421a",
              "parentUUID": "e577d9a7-94f3-4e30-b20d-68751a7dd36b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail with no property",
              "fullTitle": "Should test \"Update system by id should fail with no property",
              "timedOut": false,
              "duration": 414,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.put('/systems/', data, {'Content-Type': 'application/json'});\nconsole.log(res.response.data.message);\nexpect(res.response.status).to.eql(403);\nexpect(res.response.statusText).to.include('Forbidden');",
              "err": {},
              "uuid": "df137b31-7b41-4ce8-a27c-18d41b6c3371",
              "parentUUID": "e577d9a7-94f3-4e30-b20d-68751a7dd36b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "903bfe85-3fde-48ce-8691-f312a9507370",
            "29e9f2d0-d99e-48f4-a4bc-d35cd62b4c47",
            "df137b31-7b41-4ce8-a27c-18d41b6c3371"
          ],
          "failures": [
            "e7f20f72-e491-44af-a337-59425d68f763",
            "d922b266-c4b9-4fea-8d93-0e57d4b752c6",
            "07f625ef-7971-49f9-824e-b96ba13b421a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2460,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "660bc341-d638-4899-a833-104ff718e411",
          "title": "Should test \"create new system",
          "fullFile": "C:\\Users\\Vlad\\Code\\pwd\\pwd_backend_tests\\spec\\powder_watts\\api\\systems\\post.create.new.system.spec.js",
          "file": "\\spec\\powder_watts\\api\\systems\\post.create.new.system.spec.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after all\" hook: should delete system in \"Should test \"create new system\"",
              "fullTitle": "Should test \"create new system \"after all\" hook: should delete system in \"Should test \"create new system\"",
              "timedOut": false,
              "duration": 1091,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.delete('/systems/' + id);\nconsole.log(res.statusText);\nexpect(res.status).to.eql(200);\nconsole.log(\"System with id \"+ id + \" is deleted\")",
              "err": {},
              "uuid": "666c7c04-c427-488f-abab-32ba34155301",
              "parentUUID": "660bc341-d638-4899-a833-104ff718e411",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should POST new system successfully",
              "fullTitle": "Should test \"create new system should POST new system successfully",
              "timedOut": false,
              "duration": 383,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.post('/systems', data);\nconsole.log(res.status);\nexpect(res.status).to.eql(200);\nid = res.data.data.id;\nconsole.log(id)",
              "err": {},
              "uuid": "5e2e7c88-3cd2-4e67-ada4-3ed64711e283",
              "parentUUID": "660bc341-d638-4899-a833-104ff718e411",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "account does not exist",
              "fullTitle": "Should test \"create new system account does not exist",
              "timedOut": false,
              "duration": 189,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.custom.post('/systems', data,{\n    headers: {\n        'Authorization': '',\n        'Accept': 'application/json'\n    },\n});\nconsole.log(res.response.statusText);\nexpect(res.response.status).not.to.eql(200);\nexpect (res.response.statusText).to.include(\"Unauthorized\");",
              "err": {},
              "uuid": "eb7e50b9-629d-4ca1-86a7-b9ab53f57482",
              "parentUUID": "660bc341-d638-4899-a833-104ff718e411",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5e2e7c88-3cd2-4e67-ada4-3ed64711e283",
            "eb7e50b9-629d-4ca1-86a7-b9ab53f57482"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 572,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "overwrite": "true",
        "reportTitle": "My\\ Custom\\ Title",
        "charts": "true",
        "code": "true"
      },
      "version": "6.2.0"
    }
  }
}